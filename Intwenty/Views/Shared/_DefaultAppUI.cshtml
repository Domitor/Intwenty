@model Intwenty.MetaDataService.Model.ApplicationModel





@{

    var pnls = Model.UIStructure.FindAll(p => p.IsMetaTypePanel && p.IsRoot).OrderBy(p => p.RowOrder).ThenBy(p => p.ColumnOrder);
}

<div class="row">

    @foreach (var pl in Model.UIStructure.OrderBy(p => p.RowOrder).ThenBy(p => p.ColumnOrder))
    {
        if (pl.IsMetaTypePanel && pl.IsRoot)
        {

            <div class="col-md-@(12/pnls.Count())">

                <fieldset style="border:solid 0px #DDD !important;padding: 10px 10px 10px 10px">
                    <legend>@pl.Title</legend>

                    @foreach (var t in Model.UIStructure.Where(k => k.ParentMetaCode == pl.MetaCode).OrderBy(p => p.RowOrder).ThenBy(p => p.ColumnOrder))
                    {
                        if (t.IsMetaTypeTextBox && t.IsDataColumnConnected)
                        {
                            <div class="form-group">
                                <label class="control-label">
                                    @t.Title @{ if (t.DataColumnInfo.Mandatory)
                                        { <span style="color: red"> *</span> }}
                                </label>
                                <input id="@t.MetaCode" data-parentid="@t.ParentMetaCode" type="text" class="form-control form-control-sm" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode" v-on:input="onUserInput(event)" data-metatype="TEXTBOX" data-dbfield="@t.DataMetaCode" data-required="@t.DataColumnInfo.Mandatory" />
                            </div>

                        }

                        if (t.IsMetaTypeNumBox && t.IsDataColumnConnected)
                        {
                            <div class="form-group">
                                <label class="control-label">
                                    @t.Title  @{ if (t.DataColumnInfo.Mandatory)
                                        { <span style="color: red"> *</span> }}
                                </label>
                                <input id="@t.MetaCode" data-parentid="@t.ParentMetaCode" type="number" class="form-control form-control-sm" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode" v-on:input="onUserInput(event)" data-metatype="NUMBOX" data-dbfield="@t.DataMetaCode" data-required="@t.DataColumnInfo.Mandatory" />
                            </div>

                        }

                        if (t.IsMetaTypeDatePicker && t.IsDataColumnConnected)
                        {
                            <div class="form-group">
                                <label class="control-label">
                                    @t.Title  @{ if (t.DataColumnInfo.Mandatory)
                                        { <span style="color: red"> *</span> }}
                                </label>
                                <input id="@t.MetaCode" data-parentid="@t.ParentMetaCode" type="date" class="form-control form-control-sm" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode" v-on:change="onUserInput(event)" data-metatype="DATEPICKER" data-dbfield="@t.DataMetaCode" data-required="@t.DataColumnInfo.Mandatory" />
                            </div>

                        }

                        if (t.IsMetaTypeCheckBox && t.IsDataColumnConnected)
                        {
                            <div class="form-group">
                                <input type="checkbox" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode" /> @t.Title
                            </div>

                        }

                        if (t.IsMetaTypeTextArea && t.IsDataColumnConnected)
                        {
                            <div class="form-group">
                                <label class="control-label">
                                    @t.Title  @{ if (t.DataColumnInfo.Mandatory)
                                        { <span style="color: red"> *</span> }}
                                </label>
                                <textarea id="@t.MetaCode" data-parentid="@t.ParentMetaCode" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode" rows="10" cols="50" class="form-control form-control-sm" v-on:input="onUserInput(event)" data-metatype="TEXTAREA" data-dbfield="@t.DataMetaCode" data-required="@t.DataColumnInfo.Mandatory"></textarea>
                            </div>

                        }

                        if (t.IsMetaTypeComboBox && t.IsDataColumnConnected && t.HasValueDomain)
                        {
                            <div class="form-group">
                                <label class="control-label">
                                    @t.Title  @{ if (t.DataColumnInfo.Mandatory)
                                        { <span style="color: red"> *</span> }}
                                </label>
                                <select id="@t.MetaCode" data-parentid="@t.ParentMetaCode" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode" class="form-control form-control-sm" v-on:change="onUserInput(event)" data-metatype="COMBOBOX" data-dbfield="@t.DataMetaCode" data-required="@t.DataColumnInfo.Mandatory">
                                    <option v-for="item in valuedomains.VALUEDOMAIN_@t.DomainName" v-bind:value="item.Code">{{item.Value}}</option>
                                </select>
                            </div>

                        }

                        //LOOKUP bound to DATAVIEW
                        if (t.IsMetaTypeLookUp && t.IsDataViewConnected && t.IsDataColumnConnected && t.IsDataViewColumnConnected)
                        {
                            var mandatory = t.DataColumnInfo.Mandatory;

                            <div>
                                <label>
                                    @t.Title  @{ if (mandatory)
                                        { <span style="color: red"> *</span> }}
                                </label>


                                <div style="width:10%">
                                    <button style="float:left" class="btn btn-sm btn-secondary" v-on:click="openDataViewLookUp('@t.ViewName')"><span class="fa fa-plus"></span></button>
                                </div>
                              
                                  
                                <div style="float:left; margin-left:5px; width:30%">
                                    <input type="text" class="form-control form-control-sm" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode" v-on:keydown.tab="getDataViewValue('@t.ViewName','@t.DataMetaCode','@t.MetaCode')" data-dbfield="@t.DataMetaCode" data-viewfield="@t.DataViewColumnInfo.SQLQueryFieldName" data-lookupid="@t.MetaCode" />
                                </div>


                                @if (t.IsDataColumn2Connected && t.IsDataViewColumn2Connected)
                                {
                                    <div style="float:left; margin-left:5px; width:60%">
                                        <input type="text" class="form-control form-control-sm" v-model="model.@Model.Application.MetaCode.@t.DataMetaCode2" data-dbfield="@t.DataMetaCode2" data-viewfield="@t.DataViewColumnInfo2.SQLQueryFieldName" data-lookupid="@t.MetaCode" readonly />
                                    </div>
                                }

                               

                            </div>
                            <br />
                            <br />
                        }

                    }  <!--FOR-->

                </fieldset>
            </div> <!--COL-->

        } <!--ROW-->
    }

</div>

@foreach (var table in Model.UIStructure.OrderBy(p => p.RowOrder))
{

    if (table.IsMetaTypeEditGrid && table.IsDataTableConnected)
    {
        <h4>@table.Title</h4>

        <div>
            <div class="btn btn-sm btn-secondary" v-on:click="addSubTableLine('@table.DataMetaCode')">
                <span class="fa fa-plus"></span> Add
            </div>
        </div>
        <br />
        <table class="table table-bordered">
            <thead>
                <tr>
                    @foreach (var tf in Model.UIStructure.OrderBy(p => p.ColumnOrder))
                    {
                        if (tf.ParentMetaCode == table.MetaCode)
                        {
                            <th>@tf.Title</th>
                        }
                    }
                </tr>
            </thead>
            <tr v-for="item in model.@table.DataMetaCode">

                @foreach (var tf in Model.UIStructure.OrderBy(p => p.ColumnOrder))
                {
                    if (tf.ParentMetaCode == table.MetaCode && tf.IsMetaTypeTextBox)
                    {
                        <td><input type="text" class="form-control form-control-sm" v-model="item.@tf.DataMetaCode" /></td>
                    }

                    if (tf.ParentMetaCode == table.MetaCode && tf.IsMetaTypeNumBox)
                    {
                        <td><input type="number" class="form-control form-control-sm" v-model="item.@tf.DataMetaCode" /></td>
                    }
                }

            </tr>
        </table>
    }
}


@foreach (var t in Model.UIStructure.OrderBy(p => p.RowOrder))
{
    if (t.IsMetaTypeLookUp && t.IsDataViewConnected)
    {
        <!-- Modal -->
        <div class="modal fade" id="@t.ViewName" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@t.DataViewInfo.Title</h5>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label class="control-label">Value</label>
                                    <input type="text" class="form-control form-control-sm" v-model="viewretrieveinfo.filterValue" v-on:blur="handleDataViewFilter" />
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label class="control-label">Filter</label>
                                    <select v-model="viewretrieveinfo.filterField" class="form-control form-control-sm">
                                        @{

                                            if (t.IsDataViewColumnConnected)
                                            {
                                                <option value="@t.DataViewColumnInfo.SQLQueryFieldName">@t.DataViewColumnInfo.Title</option>
                                            }
                                            if (t.IsDataViewColumn2Connected)
                                            {
                                                <option value="@t.DataViewColumnInfo2.SQLQueryFieldName">@t.DataViewColumnInfo2.Title</option>
                                            }
                                          
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>

                                            @if (t.IsDataViewColumnConnected)
                                            {
                                                <th>@t.DataViewColumnInfo.Title</th>
                                            }
                                            @if (t.IsDataViewColumn2Connected)
                                            {
                                                <th>@t.DataViewColumnInfo2.Title</th>
                                            }
                                           
                                        </tr>
                                    </thead>
                                    <tr v-for="item in dataview">
                                        @if (t.IsDataViewColumnConnected)
                                        {
                                            <td><a href="#" v-on:click="setSelectedDataViewValue(item, '@t.MetaCode')" data-dismiss="modal">{{item.@t.DataViewColumnInfo.SQLQueryFieldName}}</a></td>
                                        }
                                        @if (t.IsDataViewColumn2Connected)
                                        {
                                            <td>{{item.@t.DataViewColumnInfo2.SQLQueryFieldName}}</td>
                                        }

                                        
                                    </tr>
                                </table>
                                <nav>
                                    <ul class="pagination">
                                        <li class="page-item" v-bind:class="{ disabled: isFirstDataViewPage }"><a class="page-link" href="#" v-on:click="prevDataViewLookUpPage()">Previous {{viewretrieveinfo.batchSize}}</a></li>
                                        <li class="page-item"><a class="page-link" href="#" v-on:click="nextDataViewLookUpPage()">Next {{viewretrieveinfo.batchSize}}</a></li>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    }
}


