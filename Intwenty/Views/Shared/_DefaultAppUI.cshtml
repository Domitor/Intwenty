@model Intwenty.MetaDataService.Model.ApplicationModel


<br />
<br/>

<h2>@Model.Application.Title</h2>

<div id="app">


    @{

        var pnls = Model.UIStructure.FindAll(p => p.IsMetaTypePanel && p.IsRoot).OrderBy(p => p.RowOrder).ThenBy(p => p.ColumnOrder);
    }

    <div class="row">

        @foreach (var pl in Model.UIStructure.OrderBy(p => p.RowOrder).ThenBy(p => p.ColumnOrder))
        {
            if (pl.IsMetaTypePanel && pl.IsRoot)
            {

                <div class="col-md-@(12/pnls.Count())">

                    <fieldset style="border:solid 0px #DDD !important;padding: 10px 10px 10px 10px">
                        <legend>@pl.Title</legend>

                        @foreach (var t in Model.UIStructure.Where(k => k.ParentMetaCode == pl.MetaCode).OrderBy(p => p.RowOrder).ThenBy(p => p.ColumnOrder))
                        {
                            if (t.IsMetaTypeTextBox && t.IsDataConnected)
                            {
                                <div class="form-group">
                                    <label class="control-label">
                                        @t.Title @{ if (t.DataInfo.Mandatory)
                                            { <span style="color: red"> *</span> }}
                                    </label>
                                    <input id="@t.MetaCode" data-parentid="@t.ParentMetaCode" type="text" class="form-control" v-model="model.@t.DataMetaCode" v-on:input="onUserInput(event)" data-metatype="TEXTBOX" data-dbfield="@t.DataMetaCode" data-required="@t.DataInfo.Mandatory" />
                                </div>

                            }

                            if (t.IsMetaTypeNumBox && t.IsDataConnected)
                            {
                                <div class="form-group">
                                    <label class="control-label">
                                        @t.Title  @{ if (t.DataInfo.Mandatory)
                                            { <span style="color: red"> *</span> }}
                                    </label>
                                    <input id="@t.MetaCode" data-parentid="@t.ParentMetaCode" type="number" class="form-control" v-model="model.@t.DataMetaCode" v-on:input="onUserInput(event)" data-metatype="NUMBOX" data-dbfield="@t.DataMetaCode" data-required="@t.DataInfo.Mandatory" />
                                </div>

                            }

                            if (t.IsMetaTypeDatePicker && t.IsDataConnected)
                            {
                                <div class="form-group">
                                    <label class="control-label">
                                        @t.Title  @{ if (t.DataInfo.Mandatory)
                                            { <span style="color: red"> *</span> }}
                                    </label>
                                    <input id="@t.MetaCode" data-parentid="@t.ParentMetaCode" type="date" class="form-control" v-model="model.@t.DataMetaCode" v-on:change="onUserInput(event)" data-metatype="DATEPICKER" data-dbfield="@t.DataMetaCode" data-required="@t.DataInfo.Mandatory" />
                                </div>

                            }

                            if (t.IsMetaTypeCheckBox && t.IsDataConnected)
                            {
                                <div class="form-group">
                                    <input type="checkbox" v-model="model.@t.DataMetaCode" /> @t.Title
                                </div>

                            }

                            if (t.IsMetaTypeTextArea && t.IsDataConnected)
                            {
                                <div class="form-group">
                                    <label class="control-label">
                                        @t.Title  @{ if (t.DataInfo.Mandatory)
                                            { <span style="color: red"> *</span> }}
                                    </label>
                                    <textarea id="@t.MetaCode" data-parentid="@t.ParentMetaCode" v-model="model.@t.DataMetaCode" rows="10" cols="50" class="form-control" v-on:input="onUserInput(event)" data-metatype="TEXTAREA" data-dbfield="@t.DataMetaCode" data-required="@t.DataInfo.Mandatory"></textarea>
                                </div>

                            }

                            if (t.IsMetaTypeComboBox && t.IsDataConnected && t.HasValueDomain)
                            {
                                <div class="form-group">
                                    <label class="control-label">
                                        @t.Title  @{ if (t.DataInfo.Mandatory)
                                            { <span style="color: red"> *</span> }}
                                    </label>
                                    <select id="@t.MetaCode" data-parentid="@t.ParentMetaCode" v-model="model.@t.DataMetaCode" class="form-control"  v-on:change="onUserInput(event)" data-metatype="COMBOBOX" data-dbfield="@t.DataMetaCode" data-required="@t.DataInfo.Mandatory">
                                        <option v-for="item in valuedomains.VALUEDOMAIN_@t.DomainName" v-bind:value="item.Code">{{item.Value}}</option>
                                    </select>
                                </div>

                            }

                            //LOOKUP bound to DATAVIEW
                            if (t.IsMetaTypeLookUp && t.IsDataViewConnected)
                            {
                                var mandatory = Model.UIStructure.Exists(x => x.ParentMetaCode == t.MetaCode && (x.IsMetaTypeLookUpKeyField || x.IsMetaTypeLookUpField) && x.IsDataViewConnected && x.IsDataConnected && x.DataInfo.Mandatory);

                                <div>
                                    <label>
                                        @t.Title  @{ if (mandatory)
                                            { <span style="color: red"> *</span> }}
                                    </label>


                                    <div style="width:10%">
                                        <button style="float:left" class="btn btn-primary" v-on:click="openDataViewLookUp('@t.ViewName')"><span class="glyphicon glyphicon-plus"></span></button>
                                    </div>
                                    @{

                                        var keyfield = Model.UIStructure.Find(x => x.ParentMetaCode == t.MetaCode && x.IsMetaTypeLookUpKeyField && x.IsDataViewConnected && x.IsDataConnected);
                                        if (keyfield != null)
                                        {
                                            <div style="float:left; margin-left:5px; width:30%">
                                                <input type="text" class="form-control" v-model="model.@keyfield.DataMetaCode" v-on:keydown.tab="getDataViewValue('@t.ViewName','@keyfield.DataMetaCode','@keyfield.ParentMetaCode')" data-dbfield="@keyfield.DataMetaCode" data-viewfield="@keyfield.ViewInfo.SQLQueryFieldName" data-lookupid="@keyfield.ParentMetaCode" />
                                            </div>
                                        }

                                        foreach (var lf in Model.UIStructure.OrderBy(p => p.RowOrder).Where(x => x.ParentMetaCode == t.MetaCode && x.IsMetaTypeLookUpField && x.IsDataViewConnected && x.IsDataConnected))
                                        {
                                            <div style="float:left; margin-left:5px; width:60%">
                                                <input type="text" class="form-control" v-model="model.@lf.DataMetaCode" data-dbfield="@lf.DataMetaCode" data-viewfield="@lf.ViewInfo.SQLQueryFieldName" data-lookupid="@lf.ParentMetaCode" readonly />
                                            </div>
                                        }

                                    }

                                </div>
                                <br />
                                <br />
                            }

                        }  <!--FOR-->

                    </fieldset>
                </div> <!--COL-->

            } <!--ROW-->
        }

        </div>

        <br />

        <button class="btn btn-primary" type="button" v-on:click="saveApplication()"><span class="glyphicon glyphicon-save"></span> Save</button>


            @foreach (var t in Model.UIStructure.OrderBy(p => p.RowOrder))
            {
                if (t.IsMetaTypeLookUp && t.IsDataViewConnected)
                {
                    <!-- Modal -->
                    <div class="modal fade" id="@t.ViewName" role="dialog">
                        <div class="modal-dialog modal-sm">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">@t.ViewInfo.Title</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label class="control-label">Value</label>
                                                <input type="text" class="form-control" v-model="viewretrieveinfo.filterValue" v-on:blur="handleDataViewFilter" />
                                            </div>
                                        </div>
                                        <div class="col-lg-6">
                                            <div class="form-group">
                                                <label class="control-label">Filter</label>
                                                <select v-model="viewretrieveinfo.filterField" class="form-control">
                                                    @{
                                                        foreach (var c in Model.UIStructure)
                                                        {

                                                            if ((c.IsMetaTypeLookUpField || c.IsMetaTypeLookUpKeyField) && c.IsDataConnected && c.IsDataViewConnected && c.ParentMetaCode == t.MetaCode)
                                                            {
                                                                <option value="@c.ViewInfo.SQLQueryFieldName">@c.Title</option>
                                                            }

                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <table class="table table-bordered">
                                                    <thead>
                                                        <tr>
                                                            @foreach (var lf in Model.UIStructure.OrderBy(p => p.RowOrder))
                                                            {
                                                                if (lf.IsMetaTypeLookUpKeyField && lf.IsDataViewConnected && lf.ParentMetaCode == t.MetaCode)
                                                                {
                                                                    <th>@lf.ViewInfo.Title</th>
                                                                }
                                                            }
                                                            @foreach (var lf in Model.UIStructure.OrderBy(p => p.RowOrder))
                                                            {
                                                                if (lf.IsMetaTypeLookUpField && lf.IsDataViewConnected && lf.ParentMetaCode == t.MetaCode)
                                                                {
                                                                    <th>@lf.ViewInfo.Title</th>
                                                                }
                                                            }
                                                        </tr>
                                                    </thead>
                                                    <tr v-for="item in dataview">
                                                        @foreach (var lf in Model.UIStructure.OrderBy(p => p.RowOrder))
                                                        {
                                                            if (lf.IsMetaTypeLookUpKeyField && lf.IsDataViewConnected && lf.ParentMetaCode == t.MetaCode)
                                                            {
                                                                <td><a href="#" v-on:click="setSelectedDataViewValue(item, '@t.MetaCode')" data-dismiss="modal">{{item.@lf.ViewInfo.SQLQueryFieldName}}</a></td>
                                                            }
                                                        }
                                                        @foreach (var lf in Model.UIStructure.OrderBy(p => p.RowOrder))
                                                        {
                                                            if (lf.IsMetaTypeLookUpField && lf.IsDataViewConnected && lf.ParentMetaCode == t.MetaCode)
                                                            {
                                                                <td>{{item.@lf.ViewInfo.SQLQueryFieldName}}</td>
                                                            }
                                                        }
                                                    </tr>
                                                </table>
                                                <ul class="pagination">
                                                    <li v-bind:class="{ disabled: isFirstDataViewPage }"><a href="#" v-on:click="prevDataViewLookUpPage()">Previous {{viewretrieveinfo.batchSize}}</a></li>
                                                    <li><a href="#" v-on:click="nextDataViewLookUpPage()">Next {{viewretrieveinfo.batchSize}}</a></li>
                                                </ul>
                                            </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }


    </div>