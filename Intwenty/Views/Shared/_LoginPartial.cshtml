@using Microsoft.AspNetCore.Identity

@inject IntwentySignInManager SignInManager
@inject IntwentyUserManager UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><span class="fa fa-user"></span> @UserManager.GetUserName(User)</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link"><span class="fa fa-user-tie"></span> @Localizer["Logout"]</button>
        </form>
    </li>
}
else
{

    @if (Settings.Value.AccountsAllowRegistration)
    {
        <li class="nav-item">
            <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register"><span class="fa fa-user-plus"></span> @Localizer["Create Account"]</a>
        </li>
    }

    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login"><span class="fa fa-user-ninja"></span> @Localizer["Login"]</a>
    </li>
}
</ul>
