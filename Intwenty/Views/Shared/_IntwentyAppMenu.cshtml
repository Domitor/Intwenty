

@{

    var systems = new List<SystemModelItem>();
    var views = await ModelRepository.GetApplicationMenuAsync(User);
    foreach (var a in views)
    {
        if (!systems.Exists(p => p.MetaCode == a.SystemMetaCode))
        {
            if (a.SystemInfo != null && views.Exists(p=> p.SystemMetaCode == a.SystemMetaCode))
            {
                systems.Add(a.SystemInfo);
            }
        }
    }

}





<li class="nav-item dropdown">
    <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="true"><span class="nav-label"><span class="fa fa-table"></span> @Localizer["Menu"]</span> <span class="caret"></span></a>
    <div class="dropdown-menu">
        @{



            var cnt = 0;
            foreach (var sys in systems)
            {
                if (cnt > 0)
                {
                    <div class="dropdown-divider"></div>
                }
                <div class="dropdown-item"><strong>@sys.Title</strong></div>
                <div class="dropdown-divider"></div>

                foreach (var view in views.Where(p => p.SystemMetaCode == sys.MetaCode && !p.Path.Contains("{id}")))
                {
                    var path = view.Path;
                    var reqinfo = string.Format("VIEWID={0}", view.Id);
                    path = "~"+path.Replace("{requestinfo}", reqinfo.B64UrlEncode());
                    <a class="dropdown-item" href="@Url.Content(path)">@view.LocalizedTitle</a>
                }

                cnt++;
            }

        }


    </div>
</li>