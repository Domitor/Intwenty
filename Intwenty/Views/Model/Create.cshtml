

@{
    ViewData["Title"] = "Create new application";
}

@await Html.PartialAsync("_Modals")


<div id="app">

    <br />
    <br />

    <div class="card">
        <div class="card-header"><h2>Create new application</h2></div>
        <div class="card-body">
            Create basic meta data for a new application.
        </div>
    </div>

    <br />
    <br />

    @await Html.PartialAsync("_MetaAppDescription")

    <button class="btn btn-sm btn-primary" type="button" v-on:click="createApplication()"><span class="fa fa-save"></span> Save</button>

</div>

@section Scripts
    {
    <script>

        var app = new Vue({
            el: '#app',
            data: {
                 model: {id: -1, title: "", dbName: "", systemMetaCode: "", description: ""}
                ,systems:[]
            },
            methods:
            {
                createApplication: function ()
                {
                    var context = this;
                    var invalid = false;

                    if (!context.model.systemMetaCode) {
                        $("#cbSystem").addClass('requiredNotValid');
                        invalid = true;
                    }
                    if (!context.model.title) {
                        $("#apptitle").addClass('requiredNotValid');
                        invalid = true;
                    }
                    if (!context.model.description) {
                        $("#appdescr").addClass('requiredNotValid');
                        invalid = true;
                    }
                    if (!context.model.metaCode) {
                        $("#appmetacode").addClass('requiredNotValid');
                        invalid = true;
                    }
                    if (!context.model.dbName) {
                        $("#appdbname").addClass('requiredNotValid');
                        invalid = true;
                    }
 
                    if (invalid)
                        return;



                    var baseurl = '@Url.Content("~/Model/API/")';
                    var endpointurl = baseurl + "Save";


                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        success: function (response)
                        {
                            if (!response.isSuccess) {
                                raiseErrorModal(response);
                            } else {
                                window.location.href = '@Url.Content("~/Model/")' + "GetList";
                            }
                        }
                    });
                },
                setCodes: function ()
                {
                    var context = this;

                    if (context.model.systemMetaCode)
                        $("#cbSystem_").removeClass('requiredNotValid');
                    if (context.model.title)
                        $("#apptitle").removeClass('requiredNotValid');
                    if (context.model.description)
                        $("#appdescr").removeClass('requiredNotValid');
                    if (context.model.metaCode)
                        $("#appmetacode").removeClass('requiredNotValid');
                    if (context.model.dbName)
                        $("#appdbname").removeClass('requiredNotValid');


                    var str = context.model.title;

                    if (!str)
                        return;

                    var metacode = "";
                    for (var i = 0; i < str.length; i++)
                    {
                        if (str[i].toLowerCase() != str[i].toUpperCase())
                        {
                            metacode += str[i];
                        }
                    }

                    if (metacode && metacode.length > 3)
                        context.model.metaCode = metacode.toUpperCase().replace(' ', '');


                    var dbname = context.model.metaCode;
                    if (dbname && dbname.length > 3)
                    {
                        dbname = dbname[0].toUpperCase() + dbname.slice(1).toLowerCase();
                        context.model.dbName = dbname;

                    }


                }
            },
            mounted: function ()
            {
                var context = this;
                var baseurl = '@Url.Content("~/Model/API/")';
                var endpointurl = baseurl + "GetSystems";
                $.get(endpointurl, function (response)
                {
                    context.systems = response;
                });
            }
        })

    </script>
}