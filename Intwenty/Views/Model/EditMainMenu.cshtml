

@{
    ViewData["Title"] = "Add / Edit Main Menu";
}


@await Html.PartialAsync("_Modals")

<div id="app">

    <br />
    <br />

    <div class="card">
        <div class="card-header"><h2>Menu designer</h2></div>
        <div class="card-body">Organize main menu item and which controllers / actions that should to be used when using the menu.</div>
    </div>

    <br />
    <div class="alert alert-success alert-dismissible fade show" role="alert" id="savealert" v-if="model.modelSaved">
        <strong>Changes have been saved !</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <br />

    <div class="row">
        <div class="col-lg-6">
            <div class="btn btn-sm btn-secondary" v-on:click="addMenuItem">
                <span class="fa fa-plus"></span> Create new menu item
            </div>
        </div>
        <div class="col-lg-6">
            <div class="btn btn-sm btn-primary" v-on:click="saveChanges" style="float:right">
                <span class="fa fa-save"></span> Save changes
            </div>
        </div>
    </div>

    <br />
    <br />

    <table class="table table">
        <thead>
            <tr>
                <th style="width:10%">System <span style="color: red"> *</span></th>
                <th style="width:15%">Title <span style="color: red"> *</span></th>
                <th style="width:15%">Type <span style="color: red"> *</span></th>
                <th style="width:15%">Parent <span style="color: red"> *</span></th>
                <th style="width:10%">Application <span style="color: red"></span></th>
                <th style="width:10%">Controller <span style="color: red"></span></th>
                <th style="width:10%">Action <span style="color: red"></span></th>
                <th style="width:10%">Order <span style="color: red"></span></th>
                <th style="width:5%"></th>
            </tr>
        </thead>
        <tbody v-for="entry in model.menuItems">
            <tr>
                <td>
                    <select v-model="entry.systemMetaCode" class="form-control form-control-sm" v-on:change="markChanged(entry)">
                        <option v-for="sys in model.systems" v-bind:value="sys.metaCode">{{sys.title}}</option>
                    </select>
                </td>

                <td><input type="text" class="form-control form-control-sm" v-model="entry.title" v-on:input="markChanged(entry)" /></td>

                <td>
                    <select v-model="entry.metaType" class="form-control form-control-sm" v-on:change="markChanged(entry)">
                        <option v-for="mt in model.menuMetaTypes" v-bind:value="mt.code">{{mt.title}}</option>
                    </select>
                </td>

                <td>
                    <select v-model="entry.parentMetaCode" class="form-control form-control-sm" v-on:change="markChanged(entry)">
                        <option v-for="mi in submenus" v-bind:value="mi.metaCode">{{mi.title}}</option>
                    </select>
                </td>

                <td>
                    <select v-model="entry.appMetaCode" class="form-control form-control-sm" v-on:change="markChanged(entry)">
                        <option v-for="app in model.applications" v-bind:value="app.metaCode">{{app.title}}</option>
                    </select>
                </td>

                <td><input type="text" class="form-control form-control-sm" v-model="entry.controller" /></td>

                <td><input type="text" class="form-control form-control-sm" v-model="entry.action" /></td>

                <td><input type="number" class="form-control form-control-sm" v-model="entry.orderNo" /></td>

                <td><div class="btn btn-sm btn-danger" v-on:click="deleteMenuItem(entry)"><span class="glyphicon glyphicon-remove"></span> Delete</div></td>
            </tr>
        </tbody>
    </table>




</div>

@section Scripts
    {
    <script>

        var app = new Vue({
            el: '#app',
            data:
            {
                model: { modelSaved:false }

            },
            methods: {

                addMenuItem: function ()
                {
                    this.model.menuItems.push({ id: -1, action: "", controller: "", title: "", metaType:"", parentMetaType:"", orderNo:0, systemMetaCode:""});
                },
                deleteMenuItem: function (entry)
                {


                },
                markChanged: function (entry)
                {


                },
                saveChanges: function ()
                {
                    var context = this;

                    var baseurl = '@Url.Content("~/Model/API/")';
                    var endpointurl = baseurl + "SaveMenu";


                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        success: function (response)
                        {
                            context.model = response;
                            context.model.modelSaved = true;
                            setTimeout(function () { context.model.modelSaved = false; }, 3000);

                        },
                        error: function (response)
                        {
                            raiseErrorModal(response.responseJSON);
                        }
                    });


                }
            },
            computed:
            {
                submenus: function ()
                {
               
                    for (var i = 0; i < this.model.menuItems.length; i++)
                        if (this.model.menuItems[i].metaType == "SUBMENUITEM")
                            res.push(this.model.menuItems[i]);

                    return res;
                }


            },
            mounted: function ()
            {

                //MenuItems
                var context = this;
                var baseurl = '@Url.Content("~/Model/API/")';
                var endpointurl = baseurl + "GetMenuModelItems";
                $.get(endpointurl, function (response)
                {
                    context.model = response;
                });



            }
        });
    </script>

}