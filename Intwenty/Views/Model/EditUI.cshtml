

@{
    ViewData["Title"] = "Edit application";
}

<style>
    .formpanel {
        border: 1px dotted black;
        margin: 5px;
        padding: 5px;
        min-height:120px;
    }

    .settingpnl {
        border: 1px dotted black;
        margin-left: 5px;
        margin-top: 10px;
        margin-right: 30px;
        padding: 15px;
    }

    .uipnl {
        margin-top: 10px;
    }
</style>



<div id="app">
   
    <br />
    <br />

    <div class="card">
        <div class="card-header"> <h2>Manage UI for application {{model.title}}</h2></div>
        <div class="card-body">Design application UI and connect it to the database.</div>
    </div>

    <br />
    <br />

    <ul class="nav nav-tabs" role="tablist">
        <li class="nav-item"><a class="nav-link active" href="#userinput" id="userinput-tab" data-toggle="tab" aria-selected="true"><b>User Inputs</b></a></li>
        <li class="nav-item"><a class="nav-link" href="#listview" id="listview-tab" data-toggle="tab" aria-selected="false"><b>Listview</b></a></li>
    </ul>

    <div class="tab-content">

        <div id="userinput" class="tab-pane fade show active">



            <br />
            <br />


            <div class="btn btn-secondary" v-on:click="addSection">
                <span class="fa fa-plus"></span> Add section
            </div>


            <div class="btn btn-primary" v-on:click="SaveApplicationUI" style="float:right">
                <span class="fa fa-save"></span> Save changes
            </div>


            <hr />
            <div>

                <div class="row" v-for="sect in model.sections">

                    <div class="col-lg-12">

                        <div class="accordion" v-bind:id="'accordion_'+sect.tempid">
                            <div class="card">
                                <div class="card-header" id="headingOne">
                                    <h5 class="mb-0">
                                        <button class="btn btn-link" type="button" data-toggle="collapse" v-bind:data-target="'#colapse'+sect.tempid">
                                            Section {{sect.title}}
                                        </button>
                                        <input type="text" class="form-control" v-model="sect.title" style="width:200px" />
                                    </h5>
                                </div>

                                <div v-bind:id="'colapse'+sect.tempid" class="collapse"  v-bind:data-parent="'#accordion_'+sect.tempid">
                                    <div class="card-body">

                                        <label><b>Choose Layout </b></label>
                                        <input type="radio" name="panelcnt" v-model="sect.layoutPanelCount" value="1" v-on:change="layoutClassChanged(sect)" /> 1 Panel
                                        <input type="radio" name="panelcnt" v-model="sect.layoutPanelCount" value="2" v-on:change="layoutClassChanged(sect)" /> 2 Panel
                                        <input type="radio" name="panelcnt" v-model="sect.layoutPanelCount" value="3" v-on:change="layoutClassChanged(sect)" /> 3 Panel



                                        <div class="row">
                                            <div v-bind:class="layoutClass(sect)" v-for="pnl in sect.layoutPanels">
                                                <div class="form-group">
                                                    <label class="control-label">Panel Title (Optional)</label>
                                                    <input type="text" class="form-control" v-model="pnl.title" />
                                                </div>
                                            </div>
                                        </div>



                                        <div class="row" v-for="lrow in sect.layoutRows">
                                            <div v-bind:class="layoutClass(sect)" v-for="lpnl in sect.layoutPanels">

                                                <div class="formpanel" v-for="input in lrow.userInputs" v-if="input.parentMetaCode==lpnl.metaCode">

                                                    <div class="dropdown" v-if="input.metaType==''" style="text-align:center; margin-top:40px">

                                                        <button class="btn btn-secondary" type="button" data-toggle="dropdown" aria-haspopup="false" aria-expanded="false"><span class="fa fa-plus"></span></button>
                                                        <div class="dropdown-menu dropdown-menu-lg-right">
                                                            <a class="dropdown-item" href="#" v-on:click="setUserInput(input,'TEXTBOX')">Textbox</a>
                                                            <a class="dropdown-item" href="#" v-on:click="setUserInput(input,'NUMBOX')">Numbox</a>
                                                            <a class="dropdown-item" href="#" v-on:click="setUserInput(input,'TEXTAREA')">Textarea</a>
                                                            <a class="dropdown-item" href="#" v-on:click="setUserInput(input,'CHECKBOX')">Checkbox</a>
                                                            <a class="dropdown-item" href="#" v-on:click="setUserInput(input,'COMBOBOX')">Combobox</a>
                                                            <a class="dropdown-item" href="#" v-on:click="setUserInput(input,'DATEPICKER')">Datepicker</a>
                                                            <a class="dropdown-item" href="#" v-on:click="setUserInput(input,'LOOKUP')">Lookup</a>
                                                        </div>

                                                    </div>



                                                    <div v-bind:id="'uipnl_' + input.id" class="uipnl" v-if="input.metaType!=''">

                                                        <label class="control-label"><i>{{input.title}}</i></label>
                                                        <span class="fa fa-trash" v-on:click="removeUI(input)" style="float:right; margin:5px"></span>
                                                        <span class="fa fa-cog" v-on:click="openSettingsDlg(input)" style="float:right; margin:5px"></span>

                                                        <div v-if="input.metaType==='TEXTBOX'">
                                                            <div class="form-group">
                                                                <input type="text" class="form-control" disabled />
                                                            </div>
                                                        </div>

                                                        <div v-if="input.metaType==='NUMBOX'">
                                                            <div class="form-group">
                                                                <input type="number" class="form-control" disabled />
                                                            </div>
                                                        </div>

                                                        <div v-if="input.metaType==='CHECKBOX'">
                                                            <div class="form-group">
                                                                <br />
                                                                <input type="checkbox" disabled />
                                                            </div>
                                                        </div>

                                                        <div v-if="input.metaType==='TEXTAREA'">
                                                            <div class="form-group">
                                                                <textarea class="form-control" rows="5" cols="50" disabled></textarea>
                                                            </div>
                                                        </div>

                                                        <div v-if="input.metaType==='DATEPICKER'">
                                                            <div class="form-group">
                                                                <input type="date" class="form-control" />
                                                            </div>
                                                        </div>

                                                        <div v-if="input.metaType==='COMBOBOX'">
                                                            <div class="form-group">
                                                                <select class="form-control" disabled>
                                                                    <option>Example 1</option>
                                                                    <option>Example 2</option>
                                                                </select>
                                                            </div>
                                                        </div>

                                                        <div v-if="input.metaType==='LOOKUP'">
                                                            <div>
                                                                <div style="width:10%">
                                                                    <button style="float:left" class="btn btn-primary"><span class="fa fa-plus"></span></button>
                                                                </div>
                                                                <div style="float:left; margin-left:5px; width:20%">
                                                                    <input type="text" class="form-control" disabled />
                                                                </div>
                                                                <div style="float:left; margin-left:5px; width:60%">
                                                                    <input type="text" class="form-control" readonly />
                                                                </div>
                                                            </div>
                                                            <br />
                                                            <br />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <br />
                                        <div class="btn btn-secondary" v-on:click="addLayoutRow(sect)">
                                            <span class="fa fa-plus"></span> Add row
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>



            </div>

        </div>

        <div id="listview" class="tab-pane fade">
            <br />
            <br />

            <h4>Define the application listview</h4>

            <br />
            <br />


            <div>

                <div style="margin:15px">
                    <div style="padding: 5px; border:dotted 1px gray">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label class="control-label">Title <span style="color: red"> *</span></label>
                                    <input type="text" class="form-control" v-model="listview.title" />
                                </div>
                            </div>
                            <div class="col-lg-6">

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12" style="margin: 5px">
                                <b>Fields: </b>
                                <br />
                                <br />
                                <div>
                                    <div>
                                        <div class="btn btn-secondary" v-on:click="addListViewField">
                                            <span class="fa fa-plus"></span> Add list view field
                                        </div>
                                    </div>
                                    <br />
                                    <table class="table table">
                                        <thead>
                                            <tr>

                                                <th style="width:30%">Title <span style="color: red"> *</span></th>
                                                <th style="width:65%">Column name <span style="color: red"> *</span></th>
                                            </tr>
                                        </thead>
                                        <tbody v-for="field in listview.fields">
                                            <tr>

                                                <td><input type="text" class="form-control" v-model="field.title" /></td>
                                                <td>
                                                    <select v-model="field.dbName" class="form-control">
                                                        <option v-for="col in dbcolumns(dbtables[0].dbName)" v-bind:value="col.dbName">{{col.dbName}}</option>
                                                    </select>

                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <br />
                                <div>
                                    <div class="btn btn-primary" v-on:click="saveListView">
                                        <span class="fa fa-save"></span> Save
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>


        </div>

    </div>


    <!-- STTING MODAL-->
    <div class="modal" id="ui_setting_modal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">UI {{active_setting_input.metaType}} Settings</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="ui_setting_modal_body">
                    <div class="settingpnl">
                        <div class="form-group">
                            <label class="control-label">Title</label>
                            <input type="text" class="form-control" v-model="active_setting_input.title" />
                        </div>

                        <div class="form-group">
                            <label class="control-label">Set database table</label>
                            <select v-model="active_setting_input.tableName" class="form-control">
                                <option v-for="tbl in dbtables" v-bind:value="tbl.dbName">{{tbl.dbName}}</option>
                            </select>
                        </div>

                        <div class="form-group" v-if="active_setting_input.metaType != 'LOOKUP'">
                            <label class="control-label">Set database column</label>
                            <select v-model="active_setting_input.columnName" class="form-control">
                                <option v-for="col in dbcolumns(active_setting_input.tableName)" v-bind:value="col.dbName">{{col.dbName}}</option>
                            </select>
                        </div>
                        <div v-if="active_setting_input.metaType=='COMBOBOX'">
                            <label class="control-label">Set value domain</label>
                            <select v-model="active_setting_input.domain" class="form-control">
                                <option v-for="vd in valuedomains" v-bind:value="vd">{{vd}}</option>
                            </select>
                        </div>
                        <div v-if="active_setting_input.metaType=='LOOKUP'">
                            <label class="control-label">Set data view</label>
                            <select v-model="active_setting_input.domain" class="form-control">
                                <option v-for="dv in dataviews" v-bind:value="dv.metaCode">{{dv.title}}</option>
                            </select>
                        </div>
                        <div v-if="active_setting_input.metaType=='LOOKUP'">
                            <label class="control-label">Set key field database column</label>
                            <select v-model="active_setting_input.lookUpKeyFieldDbName" class="form-control">
                                <option v-for="col in dbcolumns(active_setting_input.tableName)" v-bind:value="col.dbName">{{col.dbName}}</option>
                            </select>
                        </div>
                        <div v-if="active_setting_input.metaType=='LOOKUP'">
                            <label class="model.control-label">Set key field data view column</label>
                            <select v-model="active_setting_input.lookUpKeyFieldViewDbName" class="form-control">
                                <option v-for="col in viewcolumns(active_setting_input.domain)" v-bind:value="col.sqlQueryFieldName">{{col.sqlQueryFieldName}}</option>
                            </select>
                        </div>
                        <div v-if="active_setting_input.metaType=='LOOKUP'">
                            <label class="control-label">(optional) Set look up field database column</label>
                            <select v-model="active_setting_input.lookUpFieldDbName" class="form-control">
                                <option v-for="col in dbcolumns(active_setting_input.tableName)" v-bind:value="col.dbName">{{col.dbName}}</option>
                            </select>
                        </div>
                        <div v-if="active_setting_input.metaType=='LOOKUP'">
                            <label class="control-label">Set look up field data view column</label>
                            <select v-model="active_setting_input.lookUpFieldViewDbName" class="form-control">
                                <option v-for="col in viewcolumn(active_setting_input.domain)" v-bind:value="col.sqlQueryFieldName">{{col.sqlQueryFieldName}}</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


</div>

@section Scripts
        {


    


    <script>

        var app = new Vue({
            el: '#app',
            data: {
                model: {

                },
                dbtables: [],
                valuedomains: [],
                dataviews: [],
                listview: {},
                active_setting_input: {},
                idgenerator: 0
            },
            methods:
            {
                openSettingsDlg(input) {
                    this.active_setting_input = input;
                    this.$forceUpdate();
                    $("#ui_setting_modal").modal();
                },
                addLayoutRow: function (sect)
                {
                    var new_row_id = 0;
                    if (sect.layoutRows.length > 0)
                        new_row_id = sect.layoutRows[sect.layoutRows.length - 1].id + 1;
                    else
                        new_row_id = 1;

                    var row = { id: new_row_id, userInputs: [] };
                    for (var i = 0; i < sect.layoutPanels.length; i++) {
                        row.userInputs.push({ id: 0, metaType: "", metaCode: "", parentMetaCode: sect.layoutPanels[i].metaCode, rowid:new_row_id, colid:sect.layoutPanels[i].colid });
                    }
                    sect.layoutRows.push(row);

                },
                addSection: function () {
                    this.idgenerator += 1;
                    var sect = { id:0, tempid: this.idgenerator, title: "-- Your title --", layoutPanelCount: "2", layoutPanels: [], layoutRows: [] };
                    this.model.sections.push(sect);
                    this.layoutClassChanged(sect);
                    this.addLayoutRow(sect);
                    this.addLayoutRow(sect);
                    this.addLayoutRow(sect);
                },
                addListViewField: function () {
                    this.listview.fields.push({ title: "", parentMetaCode: "", metaCode: "", metaType: "LISTVIEWFIELD" });
                },
                setUserInput: function (input, metatype)
                {
                    input.metaType = metatype;
                    this.openSettingsDlg(input); 
                },
                removeUI: function (input)
                {
                    input.metaType = "";
                    this.removeApplicationUI(input);
                },
                dbcolumns: function (tablename) {
                    for (var i = 0; i < this.dbtables.length; i++)
                        if (this.dbtables[i].dbName == tablename)
                            return this.dbtables[i].columns;

                    return [];
                },
                viewcolumns: function (viewname) {
                    for (var i = 0; i < this.dataviews.length; i++)
                        if (this.dataviews[i].metaCode == viewname)
                            return this.dataviews[i].fields;

                    return [];
                },
                layoutClass: function (sect) {
                    return {
                        'col-lg-12': sect.layoutPanelCount === "1",
                        'col-lg-6': sect.layoutPanelCount === "2",
                        'col-lg-4': sect.layoutPanelCount === "3",
                    }
                },
                layoutClassChanged: function (sect) {

                    if (sect.layoutPanelCount === "1")
                    {
                        if (sect.layoutPanels.length === 0) {
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "", rowid:1, colid:1 });
                        }
                        else if (sect.layoutPanels.length === 2) {
                            sect.layoutPanels.splice(1, 1);
                        }
                        else if (sect.layoutPanels.length === 3) {
                            sect.layoutPanels.splice(1, 2);
                        }
                    }
                    else if (sect.layoutPanelCount === "2") {
                       
                        if (sect.layoutPanels.length === 0) {
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:1 });
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:2 });
                        }
                        else if (sect.layoutPanels.length === 1) {
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:2 });
                        }
                        else if (sect.layoutPanels.length === 3) {
                            sect.layoutPanels.splice(2, 1);
                        }
                    }
                    else if (sect.layoutPanelCount === "3")
                    {
                      
                        if (sect.layoutPanels.length === 0)
                        {
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:1 });
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:2 });
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:3 });
                        }
                        else if (sect.layoutPanels.length === 1) {
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:2 });
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:3 });
                        }
                       else if (sect.layoutPanels.length === 2) {
                            this.idgenerator += 1;
                            sect.layoutPanels.push({ id:0, tempid: this.idgenerator, metaType: "PANEL", metaCode: "PNL_" + this.idgenerator, parentMetaCode: "", title: "",rowid:1, colid:3 });
                        }

                    }

                    this.addUserInputSelects();
                        

                },
                addUserInputSelects() {
                    for (var s = 0; s < this.model.sections.length; s++)
                    {
                        var sect = this.model.sections[s];

                         //ADD MISSING INPUTS
                        for (var r = 0; r < sect.layoutRows.length; r++)
                        {
                            for (var c = 0; c < sect.layoutPanels.length; c++)
                            {
                                var found = false;
                                for (var u = 0; u < sect.layoutRows[r].userInputs.length; u++)
                                {
                                    if (sect.layoutRows[r].userInputs[u].parentMetaCode == sect.layoutPanels[c].metaCode)
                                    {
                                        found = true;
                                        break;
                                    }
                                }
                                if (!found) {

                                     this.idgenerator += 1;
                                     sect.layoutRows[r].userInputs.push({ id:0, tempid: this.idgenerator, metaType: "", metaCode: "", parentMetaCode: sect.layoutPanels[c].metaCode, rowid:sect.layoutRows[r].rowid, colid:sect.layoutPanels[c].colid });
                                }

                            }
                        }

                    }

                },
                closeAndSave: function (item)
                {
                    context.SaveApplicationUI();
                    item.showSettings = !item.showSettings;
                },
                SaveApplicationUI: function () {
                    var context = this;
                    var baseurl = '@Url.Content("~/Model/")';
                    var endpointurl = baseurl + "SaveApplicationUI";

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        success: function (response) {
                            context.model = response;
                             context.addUserInputSelects();
                        },
                        error: function (response)
                        {
                           raiseErrorModal(response.responseJSON);
                        }
                    });
                },
                removeApplicationUI: function (item) {
                    if (item.id < 1)
                        return;

                    var context = this;
                    var baseurl = '@Url.Content("~/Model/")';
                    var endpointurl = baseurl + "RemoveFromApplicationUI";

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(item),
                        success: function (response) {
                            context.model = response;
                            context.addUserInputSelects();
                        }
                    });
                },
                saveListView: function () {
                    var context = this;
                    var baseurl = '@Url.Content("~/Model/")';
                    var endpointurl = baseurl + "SaveApplicationListView";

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.listview),
                        success: function (response) {
                            context.listview = response;
                        }
                    });
                }

            },
            computed:
            {
                
              
            },
            mounted: function () {

                var context = this;
                var baseurl = '@Url.Content("~/Model/")';
                var endpointurl = baseurl + "GetApplicationUI/@ViewBag.SystemId";

                //Application
                $.get(endpointurl, function (response) {
                    context.model = response;
                    context.addUserInputSelects();
                }).done(function () {

                    //Tables
                    endpointurl = baseurl + "GetApplicationListOfDatabaseTables/@ViewBag.SystemId";
                    $.get(endpointurl, function (response) {
                        context.dbtables = response;
                    }).done(function () {

                        //DataViews
                        endpointurl = baseurl + "GetDataViews";
                        $.get(endpointurl, function (response) {
                            context.dataviews = response;
                        }).done(function () {

                            //Valuedomains
                            endpointurl = baseurl + "GetValueDomainNames";
                            $.get(endpointurl, function (response) {
                                context.valuedomains = response;
                            }).done(function () {

                                //ListView
                                endpointurl = baseurl + "GetApplicationListView/@ViewBag.SystemId";
                                $.get(endpointurl, function (response) {
                                    context.listview = response;
                                });
                            });
                        });

                    });
                });
            }
        });

    </script>
}
