@model List<Intwenty.Models.OperationResult>

@{
    ViewData["Title"] = "Configure database";
}


    <div id="app">

        <br />
        <br />

        <div class="card">
            <div class="card-header"><h2>Database configuration</h2></div>
            <div class="card-body">
                Use this tool configure the database according to the model. Tables and columns will be created / updated based on the current model. Tip: Run validate model before to ensure the model is correctly defined.
            </div>
        </div>

        <br />
        <br />


        <button class="btn btn-primary" type="button" v-on:click="runDatabaseConfiguration()">
            <span class="fa fa-cog"></span> Run database configuration
            <div class="spinner-grow spinner-grow-sm text-danger" v-if="model.isRunning"></div>
        </button>

        <br />
        <br />

        <div class="card" v-for="item in resultlist">
            <div class="card-header"><h2></h2></div>
            <div class="card-body">
                <p v-for="msg in item.messages">{{msg.message}}</p>
            </div>
        </div>




    </div>

@section Scripts
    {
    <script>

        var app = new Vue({
            el: '#app',
            data: {
                model: {isRunning: false},
                resultlist: []
            },
            methods:
            {
                runDatabaseConfiguration: function ()
                {
                  
                    var context = this;
                    var baseurl = '@Url.Content("~/Model/")';
                    var endpointurl = baseurl + "RunDatabaseConfiguration";

                    if (context.model.isRunning)
                        return;

                    var yesfunc = function () {

                        context.model.isRunning = true;

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(context.model),
                            success: function (response)
                            {
                                context.model.isRunning = false;
                                context.resultlist = response;
                            }
                        });
                    };

                    raiseYesNoModal("Run database configuration ?", "This will create update your application tables according to the model ?", yesfunc);


                }
            },  
            mounted: function ()
            {

            }
        })

    </script>
}