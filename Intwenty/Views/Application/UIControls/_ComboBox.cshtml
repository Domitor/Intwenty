@model IUIComplexBinding

@{
    var requiredmsg = string.Format("{0} {1}", Model.LocalizedTitle, Localizer["Is Required"]);
    var usesearch = "FALSE";
    var multiselect = "FALSE";
    var allowcreate = "FALSE";
    var DataColumn2 = "";
    if (!string.IsNullOrEmpty(Model.DataColumn2DbName))
    {
        DataColumn2 = Model.DataColumn2DbName;
    }
    else
    {
        DataColumn2 = Model.DataColumnDbName;
    }
}

<div class="form-group">
    <label class="control-label">
        @Model.LocalizedTitle  @{ if (Model.Mandatory)
            { <span style="color: red"> *</span> }}
    </label>

    <combobox id="@Model.UIId"
              name="@Model.UIId"
              class="form-control form-control-sm"
              v-bind:idfield.sync="@Model.JavaScriptObjectName.@Model.DataTableDbName.@Model.DataColumnDbName"
              @if (!string.IsNullOrEmpty(Model.DataColumn2DbName)) { <text> v-bind:textfield.sync="@Model.JavaScriptObjectName.@Model.DataTableDbName.@Model.DataColumn2DbName" </text> }
              data-metatype="@Intwenty.Model.UserInterfaceStructureModelItem.MetaTypeComboBox"
              data-title="@Model.Title"
              data-contextobject="@Model.JavaScriptObjectName"
              data-dbtable="@Model.DataTableDbName"
              data-dbfield="@Model.DataColumnDbName"
              @if (!string.IsNullOrEmpty(Model.DataColumn2DbName)) { <text> data-dbfield2="@Model.DataColumn2DbName" </text> }
              data-required="@Model.Mandatory"
              data-domain="@Model.DomainName"
              data-usesearch="@usesearch"
              data-multiselect="@multiselect"
              data-allowcreate="@allowcreate">
    </combobox>
    <span class="invalidInput" v-if="isRequiredNotValid('@Model.UIId')">@requiredmsg</span>
</div>