@model IUIComplexBinding


@{
    var requiredmsg = string.Format("{0} {1}", Model.LocalizedTitle, Localizer["Is Required"].Value);

    var usesearch = "FALSE";
    var multiselect = "FALSE";
    var allowcreate = "FALSE";
    if (Model.HasPropertyWithValue("USESEARCH", "TRUE"))
    {
        usesearch = "TRUE";
    }
    if (Model.HasPropertyWithValue("MULTISELECT", "TRUE"))
    {
        multiselect = "TRUE";
    }
    if (Model.HasPropertyWithValue("ALLOWCREATE", "TRUE"))
    {
        allowcreate = "TRUE";
    }

}

<div class="form-group">
    <label class="control-label">
        @Model.LocalizedTitle  @{ if (Model.Mandatory)
            { <span style="color: red"> *</span> }}
    </label>

    <searchbox id="@Model.UIId"
               name="@Model.UIId"
               type="text"
               class="form-control form-control-sm"
               v-bind:idfield.sync="@Model.VueModelBinding"
               @if (!string.IsNullOrEmpty(Model.DataColumn2DbName)) { <text> v-bind:textfield.sync="@Model.VueModelBinding2" </text> }
               data-metatype="@Intwenty.Model.UserInterfaceStructureModelItem.MetaTypeSearchBox"
               data-title="@Model.Title"
               @if (!string.IsNullOrEmpty(Model.JavaScriptObjectName)) {<text>data-contextobject="@Model.JavaScriptObjectName"</text> } else {<text>data-contextobject="@Model.DataTableDbName"</text>}
               data-dbtable="@Model.DataTableDbName"
               data-dbfield="@Model.DataColumnDbName"
               @if (!string.IsNullOrEmpty(Model.DataColumn2DbName)) { <text> data-dbfield2="@Model.DataColumn2DbName" </text> }
               data-required="@Model.Mandatory"
               data-domain="@Model.DomainName"
               data-usesearch="@usesearch"
               data-multiselect="@multiselect"
               data-allowcreate="@allowcreate" />

    <span id="invalidtxt_@Model.UIId" class="invalidInput" v-if="isRequiredNotValid('@Model.UIId')">@requiredmsg</span>
</div>


