

@{
    ViewData["Title"] = "Edit application";
}

<style>
    .formpanel 
    {
        border-left: 1px dotted black;
        margin: 5px;
        padding: 5px;
    }

    .settingpnl {
        border: 1px dotted black;
        margin-left: 5px;
        margin-top: 10px;
        margin-right: 30px;
        padding: 15px;
    }

    .uipnl {

        margin-top: 10px;

    }


</style>


<div id="app">

    <br />
    <br />

    {{$data}}

    <h2>Manage UI for application {{model.title}}</h2>
    <br />
    <br />

    <h4>Choose Layout</h4>
    <input type="radio" name="panelcnt" v-model="uicolumns" value="1" /> 1 Panel
    <input type="radio" name="panelcnt" v-model="uicolumns" value="2" /> 2 Panel
    <input type="radio" name="panelcnt" v-model="uicolumns" value="3" /> 3 Panel

    <div style="float:right">
        <div class="btn btn-primary" v-on:click="addUIRow">
            <span class="glyphicon glyphicon-plus"></span> Add row
        </div>
    </div>

    <hr />
    <div>
        <div class="row" v-for="r in uirows">

            <div v-bind:class="pnlLayout" v-for="c in uicols">

                <div class="formpanel">

                    <div class="dropdown" v-if="!hasUI(r,c)">
                        <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">
                            Select
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-left" v-if="!hasUI(r,c)">
                            <li><a href="#" v-on:click="createUI(r,c,'TEXTBOX')">Textbox</a></li>
                            <li><a href="#" v-on:click="createUI(r,c,'NUMBOX')">Numbox</a></li>
                            <li><a href="#" v-on:click="createUI(r,c,'TEXTAREA')">Textarea</a></li>
                            <li><a href="#" v-on:click="createUI(r,c,'CHECKBOX')">Checkbox</a></li>
                            <li><a href="#" v-on:click="createUI(r,c,'COMBOBOX')">Combobox</a></li>
                            <li><a href="#" v-on:click="createUI(r,c,'DATEPICKER')">Datepicker</a></li>
                            <li><a href="#" v-on:click="createUI(r,c,'LOOKUP')">Lookup</a></li>
                        </ul>

                    </div>



                    <div v-bind:id="'uipnl_' + r.id +'_'+c.id" class="uipnl" v-if="hasUI(r,c)">

                        <label class="control-label" v-if="!current(r,c).showSettings"><i>{{current(r,c).title}}</i> <a href="#" v-on:click="current(r,c).showSettings=!current(r,c).showSettings">[Settings]</a></label>
                        <label class="control-label" v-if="current(r,c).showSettings"><i>{{current(r,c).title}}</i> <a href="#" v-on:click="current(r,c).showSettings=!current(r,c).showSettings">[Close]</a></label>
                        <div v-if="current(r,c).metaType==='TEXTBOX'">
                            <div class="form-group">
                                <input type="text" class="form-control" disabled />
                            </div>
                        </div>

                        <div v-if="current(r,c).metaType==='NUMBOX'">
                            <div class="form-group">
                                <input type="number" class="form-control" disabled />
                            </div>
                        </div>

                        <div v-if="current(r,c).metaType==='CHECKBOX'">
                            <div class="form-group">
                                <br />
                                <input type="checkbox" disabled />
                            </div>
                        </div>

                        <div v-if="current(r,c).metaType==='TEXTAREA'">
                            <div class="form-group">
                                <textarea class="form-control" rows="5" cols="50" disabled></textarea>
                            </div>
                        </div>

                        <div v-if="current(r,c).metaType==='DATEPICKER'">
                            <div class="form-group">
                                <input type="date" class="form-control" />
                            </div>
                        </div>

                        <div v-if="current(r,c).metaType==='COMBOBOX'">
                            <div class="form-group">
                                <select class="form-control" disabled>
                                    <option>Example 1</option>
                                    <option>Example 2</option>
                                </select>
                            </div>
                        </div>

                        <div v-if="current(r,c).metaType==='LOOKUP'">
                            <div>
                                <div style="width:10%">
                                    <button style="float:left" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span></button>
                                </div>
                                <div style="float:left; margin-left:5px; width:20%">
                                    <input type="text" class="form-control" disabled />
                                </div>
                                <div style="float:left; margin-left:5px; width:50%">
                                    <input type="text" class="form-control" readonly />
                                </div>
                            </div>
                            <br />
                            <br />
                        </div>


                    </div>


                    <div v-bind:id="'settingpnl_' + r.id +'_'+c.id" class="settingpnl" v-if="current(r,c).showSettings">

                        <span><b><i>Settings</i></b></span>
                        <span style="float:right"><a href="#" v-on:click="removeUI(r,c)">Remove</a></span>
                        <br />
                        <div class="form-group">
                            <label class="control-label">Title</label>
                            <input type="text" class="form-control" v-model="current(r,c).title" />
                        </div>

                        <div class="form-group">
                            <label class="control-label">Set database table</label>
                            <select v-model="current(r,c).tableName" class="form-control">
                                <option v-for="tbl in dbtables" v-bind:value="tbl.dbName">{{tbl.dbName}}</option>
                            </select>
                        </div>

                        <div class="form-group" v-if="current(r,c).metaType != 'LOOKUP'">
                            <label class="control-label">Set database column</label>
                            <select v-model="current(r,c).columnName" class="form-control">
                                <option v-for="col in dbcolumns(current(r,c).tableName)" v-bind:value="col.dbName">{{col.dbName}}</option>
                            </select>
                        </div>
                        <div v-if="current(r,c).metaType=='COMBOBOX'">
                            <label class="control-label">Set value domain</label>
                            <select v-model="current(r,c).domain" class="form-control">
                                <option v-for="vd in valuedomains" v-bind:value="vd">{{vd}}</option>
                            </select>
                        </div>
                        <div v-if="current(r,c).metaType=='LOOKUP'">
                            <label class="control-label">Set data view</label>
                            <select v-model="current(r,c).domain" class="form-control">
                                <option v-for="dv in dataviews" v-bind:value="dv.metaCode">{{dv.title}}</option>
                            </select>
                        </div>
                        <div v-if="current(r,c).metaType=='LOOKUP'">
                            <label class="control-label">Set key field database column</label>
                            <select v-model="current(r,c).lookUpKeyFieldDbName" class="form-control">
                                <option v-for="col in dbcolumns(current(r,c).tableName)" v-bind:value="col.dbName">{{col.dbName}}</option>
                            </select>
                        </div>
                        <div v-if="current(r,c).metaType=='LOOKUP'">
                            <label class="control-label">Set key field data view column</label>
                            <select v-model="current(r,c).lookUpKeyFieldViewDbName" class="form-control">
                                <option v-for="col in viewcolumns(current(r,c).domain)" v-bind:value="col.title">{{col.sqlQueryFieldName}}</option>
                            </select>
                        </div>
                        <div v-if="current(r,c).metaType=='LOOKUP'">
                            <label class="control-label">(optional) Set look up field database column</label>
                            <select v-model="current(r,c).lookUpFieldDbName" class="form-control">
                                <option v-for="col in dbcolumns(current(r,c).tableName)" v-bind:value="col.dbName">{{col.dbName}}</option>
                            </select>
                        </div>
                        <div v-if="current(r,c).metaType=='LOOKUP'">
                            <label class="control-label">Set look up field data view column</label>
                            <select v-model="current(r,c).lookUpFieldViewDbName" class="form-control">
                                <option v-for="col in viewcolumns(current(r,c).domain)" v-bind:value="col.title">{{col.sqlQueryFieldName}}</option>
                            </select>
                        </div>
                    </div>
                    
                </div>

            </div>
        </div>



    </div>

</div>

@section Scripts
    {
    <script>
       
        var app = new Vue({
            el: '#app',
            data: {
                model: {},
                uicolumns: "2",
                uirows: [],
                inputs: [],
                dbtables: [],
                valuedomains: [],
                dataviews: []
               
            },
            methods:
            {
               
                createUI: function (row, col, metatype)
                {
                    this.inputs.push({ metaType: metatype, title: " - Your title - ", rowid: row.id, colid: col.id, showSettings:false });
                },
                removeUI: function (row, col)
                {

                    for (var i = 0; i < this.inputs.length; i++)
                    {
                        if (this.inputs[i].rowid === row.id && this.inputs[i].colid === col.id)
                        {
                            this.inputs.splice(i, 1);
                            break;
                        }   
                    }
                },
                current: function (row, col) {

                    for (var i = 0; i < this.inputs.length; i++) {
                        if (this.inputs[i].rowid === row.id && this.inputs[i].colid === col.id)
                            return this.inputs[i];
                    }

                    return {};
                },
                hasUI: function (row, col) {

                    for (var i = 0; i < this.inputs.length; i++) {
                        if (this.inputs[i].rowid === row.id && this.inputs[i].colid === col.id)
                            return true;
                    }

                    return false;
                },
                dbcolumns: function (tablename) {
                    for (var i = 0; i < this.dbtables.length; i++)
                        if (this.dbtables[i].dbName == tablename)
                            return this.dbtables[i].columns;

                    return [];
                },
                viewcolumns: function (viewname) {
                    for (var i = 0; i < this.dataviews.length; i++)
                        if (this.dataviews[i].metaCode == viewname)
                            return this.dataviews[i].fields;

                    return [];
                },
                addUIRow: function ()
                {
                    this.uirows.push({ id: this.uirows.length+1 });
                }
              
            },
            computed:
            {
                pnlLayout: function () {
                    return {
                        'col-lg-12': this.uicolumns ==="1",
                        'col-lg-6': this.uicolumns === "2",
                        'col-lg-4': this.uicolumns === "3",
                    }
                },
                uicols: function () {
                    
                        if (this.uicolumns === "1")
                            return [{ id: 1 }];
                        if (this.uicolumns === "2")
                            return [{ id: 1 }, { id: 2 }];
                        if (this.uicolumns === "3")
                            return [{ id: 1 }, { id: 2 }, { id: 3 }];
                    
                }
             
                


            },
            mounted: function ()
            {
                var context = this;
                var baseurl = '@Url.Content("~/ApplicationInfo/")';
                var endpointurl = baseurl + "GetApplication/@ViewBag.SystemId";

                //Application
                $.get(endpointurl, function (response)
                {
                    context.model = response;
                });

                for (var i = 1; i < 4; i++)
                    this.uirows.push({ id: i });

                //Tables
                endpointurl = baseurl + "GetApplicationListOfDatabaseTables/@ViewBag.SystemId";
                $.get(endpointurl, function (response)
                {
                    context.dbtables = response;
                });

                //DataViews
                endpointurl = baseurl + "GetDataViews";
                $.get(endpointurl, function (response) {
                    context.dataviews = response;
                });
               
            }
        })

    </script>
}