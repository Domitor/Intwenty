@page
@inject Microsoft.Extensions.Options.IOptions<Intwenty.Model.IntwentySettings> Settings
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<br />
<br />

<div class="card">
    <div class="card-header"><h2>@ViewData["Title"]</h2></div>
    <div class="card-body">Create a new account</div>
</div>

<br />
<br />

<div class="row" id="app">
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            @if (Settings.Value.EnableLocalization && Settings.Value.LocalizationMethod == LocalizationMethods.UserLocalization)
            {
                <div class="form-group">
                    <label asp-for="Input.Language"></label>
                    <select asp-for="Input.Language" class="form-control">
                        @{
                            foreach (var t in Settings.Value.SupportedLanguages)
                            {
                                <option value="@t.Culture">@t.Name</option>
                            }
                        }
                    </select>
                </div>
            }

            @if (Settings.Value.EnableUserInvites)
            {

                <div class="form-group">
                    <label asp-for="Input.AccountType"></label>
                    <select asp-for="Input.AccountType" class="form-control" v-model="model.accountType">
                        <option value="GROUPADMIN">Organization Account</option>
                        <option value="GROUPMEMBER">Member Account</option>
                    </select>
                    <div v-if="model.accountType=='GROUPADMIN'" class="alert alert-primary">This creates an account where you register a new company/group/team and may invite other users to collaborate.</div>
                    <div v-if="model.accountType=='GROUPMEMBER'" class="alert alert-primary">This creates an account where you join an existing company/group/team.</div>
                </div>

                <div class="form-group" v-if="model.accountType=='GROUPADMIN'">
                    <label>Companyname / Groupname to create</label>
                    <input asp-for="Input.GroupName" class="form-control" />
                    <span asp-validation-for="Input.GroupName" class="text-danger"></span>
                    
                </div>

                <div class="form-group" v-if="model.accountType=='GROUPMEMBER'">
                    <label>Companyname / Groupname to join</label>
                    <input asp-for="Input.GroupName" class="form-control" />
                    <span asp-validation-for="Input.GroupName" class="text-danger"></span>
                </div>

            }

            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>

    @if (Settings.Value.EnableExternalLogins)
    {
        <div class="col-md-6 col-md-offset-2">
            <section>
                <h4>Use another service to register.</h4>
                <hr />
                @{
                    if ((Model.ExternalLogins?.Count ?? 0) == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                for details on setting up this ASP.NET application to support logging in via external services.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in Model.ExternalLogins)
                                    {
                                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>

        var app = new Vue({
            el: '#app',
            data:
            {
                model: { accountType: "" }
               
            },
            methods: {

            },
            computed:
            {

            },
            mounted: function ()
            {



            }
        });
    </script>

}
