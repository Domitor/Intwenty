
@inject IntwentySignInManager SignInManager
@inject IntwentyUserManager UserManager

@{
    var currentuser = UserManager.GetUserAsync(User);
    var isexternal = false;
    if (currentuser != null && currentuser.Result != null)
    {
        isexternal = currentuser.Result.CreatedWithExternalProvider;
    }

}


<ul class="nav nav-pills bg-light flex-column" style="padding:10px">

    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">@Localizer["Profile"]</a></li>

    @if (Settings.Value.LocalizationMethod == LocalizationMethods.UserLocalization)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.LanguageNavClass(ViewContext)" id="profile" asp-page="./Language">@Localizer["Language"]</a></li>
    }

    @if (!isexternal && !Settings.Value.UseFrejaEIdLogin && !Settings.Value.UseBankIdLogin)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">@Localizer["Password"]</a></li>
    }

    @if (Settings.Value.HasMfaMethods && Settings.Value.TwoFactorEnable)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./MfaAuth">@Localizer["Two-factor authentication"]</a></li>
    }
    @if (Settings.Value.APIEnable)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.APIKeyNavClass(ViewContext)" id="apikey-data" asp-page="./APIKey">@Localizer["API Key"]</a></li>
    }
    @if (Settings.Value.AccountsEnableUserGroups)
    {
        <li class="nav-item"><a class="nav-link @ManageNavPages.GroupsClass(ViewContext)" id="apikey-data" asp-page="./Groups">@Localizer["Groups"]</a></li>
    }

   
</ul>
