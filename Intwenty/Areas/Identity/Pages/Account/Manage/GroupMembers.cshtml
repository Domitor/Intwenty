@page
@model GroupMembersModel
@{
    ViewData["Title"] = "Manage Group Members";
    ViewData["ActivePage"] = ManageNavPages.GroupMembers;
}
<h4>@ViewData["Title"]</h4>
<h6>Groupname: @Model.Group</h6>
<br />



<div class="row" id="app">
    <div class="col-md-6">

        <h6>Invite a new user</h6>
        <div class="form-group">
            <label class="control-label">Email Address</label>
            <input v-model="model.invitation" type="email" class="form-control form-control form-control-sm" />
        </div>
        <button type="button" class="btn btn-primary form-control form-control form-control-sm" v-on:click="SendInvitation()">Send Invitation</button>

        <br />
        <br />
        <br />
        <h6>Users waiting to join</h6>
        <hr />
        @foreach (var t in Model.GroupMembers)
        {

    <div class="row">

        @if (t.MembershipStatus == "WAITING")
        {
            <div class="col-md-6">@t.UserName</div>
            <div class="col-md-3"><button type="button" class="btn btn-success m-2" v-on:click="SetMembership('@t.UserId','ACCEPTED', '@t.GroupId')">Accept</button></div>
            <div class="col-md-3"><button type="button" class="btn btn-danger m-2" v-on:click="SetMembership('@t.UserId','REMOVE', '@t.GroupId')">Remove</button></div>
        }

    </div>
        }
        @if (Model.GroupMembers.Where(p => p.MembershipStatus == "WAITING").Count() == 0)
        {
            <i>No new users have reguseted to join the group</i>
        }

        <br />
        <br />
        <br />
        <h6>Active users</h6>
        <hr />
        @foreach (var t in Model.GroupMembers)
        {
            <div class="row">

                @if (t.MembershipStatus == "ACCEPTED")
                {
                    <div class="col-md-9">@t.UserName</div>
                    <div class="col-md-3"><button type="button" class="btn btn-danger m-2" v-on:click="SetMembership('@t.UserId','REMOVE', '@t.GroupId')">Remove</button></div>
                }

            </div>
        }
        @if (Model.GroupMembers.Where(p => p.MembershipStatus == "ACCEPTED").Count() == 0)
        {
            <i>You are the only meber of the group</i>
        }


    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>

        var app = new Vue({
            el: '#app',
            data:
            {
                model: {  }

            },
            methods: {

                SetMembership: function (userid,status,groupid)
                {

                    var baseurl = '@Url.Content("~/Identity/Account/Manage/")';
                    var endpointurl = baseurl + "GroupMembers?handler=MembershipChange";
                    var antiforgerytoken = getIntwentyAntiForgeryToken();
                    var data = { "userId": userid, "status": status, "groupId": groupid }


                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(data),
                        headers: {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response)
                        {
                            window.location.reload(true);
                        },
                        error: function (response) {

                        }
                    });
                },
                SendInvitation: function ()
                {
                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/Account/Manage/")';
                    var endpointurl = baseurl + "GroupMembers?handler=SendInvitation";
                    var antiforgerytoken = getIntwentyAntiForgeryToken();


                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model.invitation),
                        headers: {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response)
                        { 
                            raiseInformationModal("Invitation sent", "An invitation to join the group has been sent to " + context.model.invitation);
                            context.model.invitation = "";
                        },
                        error: function (response) {

                        }
                    });
                }


            },
            computed:
            {


            },
            mounted: function ()
            {



            }
        });
    </script>
}

