@page
@model LoginModel
@using Microsoft.Extensions.Options
@using Intwenty.Model


@{
    ViewData["Title"] = Localizer["Log In"].Value;
}

<br />
<br />

<div class="card">
    <div class="card-header"><h2>@ViewData["Title"]</h2></div>
    <div class="card-body">

    </div>
</div>

<br />
<br />

<div class="row" id="app">

    @if (Settings.Value.UseBankIdLogin)
    {
        <partial name="_LoginBankId" model="Model"  />

    }
    else if (Settings.Value.UseFrejaEIdLogin)
    {

        <partial name="_LoginFreja" model="Model" />
    }
    else
    {

        @if (Settings.Value.UseLocalLogins)
        {
            <partial name="_LoginLocal" model="Model" />
        }


        @if (Settings.Value.UseExternalLogins)
        {
            <partial name="_LoginExternal" model="Model" />
        }
    }

</div>



@section Scripts
 {

    <script>

        var app = new Vue({
            el: '#app',
            data:
            {
                model: { userName: "", password: "", resultCode: "INIT", returnUrl: "@Model.ReturnUrl" }
            },
            methods: {

                localLogin: function () {
                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/Account/")';
                    var endpointurl = baseurl + "Login?handler=LocalLogin";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        headers:
                        {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response) {
                            window.location = response.returnUrl;
                        },
                        error: function (response) {
                            context.model = response.responseJSON;
                            if (context.model.resultCode == "LOCKEDOUT" || context.model.resultCode == "REQUIREMFA") {
                                window.location = context.model.redirectUrl;
                            }
                        }
                    });
                },
                AuthenticateBankId: function ()
                {
                     var context = this;
                     var baseurl = '@Url.Content("~/Identity/Account/")';
                     var endpointurl = baseurl + "Login?handler=BankIdLogin";

                    $.get(endpointurl, function (response)
                    {
                        window.location = response.returnUrl;

                    }).fail(function (response)
                    {
                        context.model = response.responseJSON;
                        if (context.model.resultCode == "LOCKEDOUT" || context.model.resultCode == "REQUIREMFA") {
                            window.location = context.model.redirectUrl;
                        }
                    });

                }

            },
            computed:
            {
                example: function ()
                {

                }

            },
            mounted: function ()
            {
               @if(Settings.Value.UseFrejaEIdLogin)
               {
                   <text>
                        var context = this;
                        var baseurl = '@Url.Content("~/Identity/Account/")';
                        var endpointurl = baseurl + "Login?handler=FrejaLogin";

                        $.get(endpointurl, function (response)
                        {
                            window.location = response.returnUrl;

                        }).fail(function (response) {
                            context.model = response.responseJSON;
                            if (context.model.resultCode == "LOCKEDOUT" || context.model.resultCode == "REQUIREMFA") {
                                window.location = context.model.redirectUrl;
                            }
                        });
                   </text>
               }

               @if(Settings.Value.UseBankIdLogin && Model.Method== "BANKID_START_THIS")
               {
                   <text>
                        this.AuthenticateBankId();
                   </text>
               }

         }
     });
    </script>
}