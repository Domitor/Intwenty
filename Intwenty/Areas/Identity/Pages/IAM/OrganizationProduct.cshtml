@page "{OrganizationId}/{ProductId}"
@model OrganizationProductModel
@{
    ViewData["Title"] = "Edit ";
}

@await Html.PartialAsync("_Modals")


<div id="app">

    <br />
    <br />
    <div class="card">
        <div class="card-header"><h2>Product - Organization Configuration</h2></div>
        <div class="card-body">Manage the product <b>{{model.productName}}</b> for the organization <b>{{model.organizationName}}</b> </div>
    </div>
    <br />
    <div class="alert alert-success alert-dismissible fade show" role="alert" id="savealert" v-if="model.modelSaved">
        <strong>Changes have been saved !</strong><br />
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>


    <ul class="nav">
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/IAM/Organization" asp-route-id="@Model.OrganizationId" role="button" class="btn btn-sm btn-outline-secondary" style="margin:10px"><span class="far fa-hand-point-left" style="font-size:large"></span> Back</a>
        </li>
        <li class="nav-item">
            <button class="btn btn-sm btn-outline-primary" type="button" v-on:click="updateEntity()" style="margin:10px"><span class="fa fa-save" style="font-size:large"></span> Save</button>
        </li>
    </ul>
    <br />

    <div class="form-group">
        <label class="control-label">API Path<span style="color: red"> *</span></label>
        <input id="tb_apipath" type="text" class="form-control form-control-sm" v-model="model.apiPath" />
    </div>

    <div class="form-group">
        <label class="control-label">Product URI<span style="color: red"> *</span></label>
        <input id="tb_produri" type="text" class="form-control form-control-sm" v-model="model.productURI" />
    </div>

    <br />

    <ul class="nav">
        <li class="nav-item">
            <button class="btn btn-sm btn-secondary" v-on:click="addRoleAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
        </li>
        <li class="nav-item">
            <h5>Roles</h5>
        </li>
    </ul>
    <p>By adding roles all users in the organization will be granted access according to the role</p>
    <br />
    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
            </tr>
        </thead>
        <tbody v-for="item in model.roleAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
            </tr>
        </tbody>
    </table>

    <br />

    <ul class="nav">
        <li class="nav-item">
            <button class="btn btn-sm btn-secondary" v-on:click="addSystemAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
        </li>
        <li class="nav-item">
            <h5>Systems</h5>
        </li>
    </ul>
    <p>By adding (Intwenty) system permissions all users in the organization will be granted access to all applications in the system</p>
    <br />
    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
                <th style="width:10%">Read</th>
                <th style="width:10%">Modify</th>
                <th style="width:10%">Delete</th>
            </tr>
        </thead>
        <tbody v-for="item in model.systemAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
                <td><input type="checkbox" v-model="item.readAuth" /></td>
                <td><input type="checkbox" v-model="item.modifyAuth" /></td>
                <td><input type="checkbox" v-model="item.deleteAuth" /></td>
            </tr>
        </tbody>
    </table>

    <br />

    <ul class="nav">
        <li class="nav-item">
            <button class="btn btn-sm btn-secondary" v-on:click="addApplicationAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
        </li>
        <li class="nav-item">
            <h5>Applications</h5>
        </li>
    </ul>
    <p>By adding (Intwenty) application permissions all users in the organization will be granted access to the application</p>
    <br />
    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
                <th style="width:10%">Read</th>
                <th style="width:10%">Modify</th>
                <th style="width:10%">Delete</th>
            </tr>
        </thead>
        <tbody v-for="item in model.applicationAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
                <td><input type="checkbox" v-model="item.readAuth" /></td>
                <td><input type="checkbox" v-model="item.modifyAuth" /></td>
                <td><input type="checkbox" v-model="item.deleteAuth" /></td>
            </tr>
        </tbody>
    </table>

    <ul class="nav">
        <li class="nav-item">
            <button class="btn btn-sm btn-secondary" v-on:click="addViewAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
        </li>
        <li class="nav-item">
            <h5>Views</h5>
        </li>
    </ul>
    <p>By adding (Intwenty) application-view permissions all users in the organization will be granted access to the view</p>
    <br />
    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
                <th style="width:10%">Read</th>
                <th style="width:10%">Modify</th>
                <th style="width:10%">Delete</th>
            </tr>
        </thead>
        <tbody v-for="item in model.viewAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
                <td><input type="checkbox" v-model="item.readAuth" /></td>
                <td><input type="checkbox" v-model="item.modifyAuth" /></td>
                <td><input type="checkbox" v-model="item.deleteAuth" /></td>
            </tr>
        </tbody>
    </table>


</div>

@section Scripts
    {

    <script>

        var app = new Vue({
            el: '#app',
            data:
            {
                model: {  },
                users: [],
                idgen: -1
            },
            methods: {

                updateEntity: function ()
                {
                    var context = this;
                    var baseurl = '@Url.Content("~/Identity/IAM/")';
                    var endpointurl = baseurl + "OrganizationProduct/@Model.OrganizationId/@Model.ProductId?handler=UpdateEntity";
                    var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                    $.ajax({
                        url: endpointurl,
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(context.model),
                        headers: {
                            RequestVerificationToken: antiforgerytoken
                        },
                        success: function (response)
                        {
                            context.model = response;
                            context.model.modelSaved = true;
                            setTimeout(function () { context.model.modelSaved = false; }, 3000);
                        },
                        error: function (response)
                        {
                            //raiseErrorModal(response.responseJSON);
                        }
                    });
                },
                removeAuthorizationItem: function ()
                {
                  
                },
                addRoleAuth: function () {

                },
                addSystemAuth: function () {

                },
                addApplicationAuth: function () {

                },
                addViewAuth: function () {

                }

            },
            computed:
            {
                example: function ()
                {

                }

            },
            mounted: function ()
            {
                var context = this;
                var baseurl = '@Url.Content("~/Identity/IAM/")';
                var endpointurl = baseurl + "OrganizationProduct/@Model.OrganizationId/@Model.ProductId?handler=Load";
                $.get(endpointurl, function (response)
                {
                    context.model = response;
                });
            }
        });
    </script>

}

