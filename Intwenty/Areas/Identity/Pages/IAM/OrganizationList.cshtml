@page
@model OrganizationListModel
@{
    ViewData["Title"] = "Organizations";
}

@await Html.PartialAsync("_Modals")


<div id="app">

    <br />
    <br />
    <div class="card">
        <div class="card-header"><h2>Organizations</h2></div>
        <div class="card-body">Add and remove user organizations</div>
    </div>

    <br />
    <br />

    <div>

        <div class="btn btn-sm btn-secondary" v-on:click="addEntity">
            <span class="fa fa-plus"></span>
        </div>
    </div>
    <br />
    <br />
    <table class="table table">
        <thead>
            <tr>

                <th style="width:5%"></th>
                <th style="width:5%"></th>
                <th style="width:25%">Id</th>
                <th style="width:15%">Name</th>
            </tr>
        </thead>
        <tbody v-for="item in list">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="deleteEntity(item)" title=" Delete"><i class="fa fa-trash"></i></div></td>
                <td><a role="button" class="btn btn-sm btn-secondary" v-bind:href="'Organization/' + item.id" title="Edit"><i class="fas fa-edit"></i></a></td>
                <td>{{item.id}}</td>
                <td>{{item.name}}</td>

            </tr>
        </tbody>
    </table>

    <div class="modal" id="addEntityModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Organization</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label class="control-label">Name<span style="color: red"> *</span></label>
                        <input id="tb_firstname" type="text" class="form-control form-control-sm" v-model="model.name" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="addEntityModal_okBtn" type="button" class="btn btn-sm btn-primary" data-dismiss="modal">Ok</button>
                    <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts
    {

    <script>

        var app = new Vue({
            el: '#app',
            data:
            {
                model: {  },
                list: [],
                idgen: -1
            },
            methods: {


                addEntity: function ()
                {

                    var context = this;
                    var okfunc = function ()
                    {
                        var baseurl = '@Url.Content("~/Identity/IAM/")';
                        var endpointurl = baseurl + "OrganizationList?handler=AddEntity";
                        var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(context.model),
                            headers: {
                                RequestVerificationToken: antiforgerytoken
                            },
                            success: function (response)
                            {
                                context.model = {};
                                context.list = response;
                            },
                            error: function (response)
                            {
                                //raiseErrorModal(response.responseJSON);
                            }
                        });
                    }

                    $("#addEntityModal_okBtn").off().on('click', okfunc);
                    $("#addEntityModal").modal();

                },
                deleteEntity: function (item)
                {
                    var context = this;
                    var yesfunc = function ()
                    {

                        var baseurl = '@Url.Content("~/Identity/IAM/")';
                        var endpointurl = baseurl + "OrganizationList?handler=DeleteEntity";
                        var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(item),
                            headers: {
                                RequestVerificationToken: antiforgerytoken
                            },
                            success: function (response) {
                                context.list = response;
                            },
                            error: function (response) {
                                raiseErrorModal(response.responseJSON);
                            }
                        });
                     }

                    raiseYesNoModal("Delete Organization ?", "No users will be deleted, continue ?", yesfunc);
                }
            },
            computed:
            {
                example: function ()
                {

                }

            },
            mounted: function ()
            {

                var context = this;
                var baseurl = '@Url.Content("~/Identity/IAM/")';
                var endpointurl = baseurl + "OrganizationList?handler=Load";
                $.get(endpointurl, function (response) {
                  context.list = response;
                });

            }
        });
    </script>

}

