@page "{UserId}/{OrganizationId}/{ProductId}"
@model UserProductModel
@{
    ViewData["Title"] = "User Product ";
}

@await Html.PartialAsync("_Modals")


<div id="app">

    <br />
    <br />
    <div class="card">
        <div class="card-header"><h2>User Product</h2></div>
        <div class="card-body">Authorize the product <b>{{model.productName}}</b> for the user <b>{{model.userName}}</b> </div>
    </div>
    <br />
    <div class="alert alert-success alert-dismissible fade show" role="alert" id="savealert" v-if="model.modelSaved">
        <strong>Changes have been saved !</strong><br />
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>


    <ul class="nav">
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/IAM/User" asp-route-id="@Model.UserId" role="button" class="btn btn-sm btn-outline-secondary" style="margin:10px"><span class="far fa-hand-point-left" style="font-size:large"></span> Back</a>
        </li>
    </ul>


    <br />


    <div style="margin-left:10px">
        <ul class="nav">
            <li class="nav-item">
                <button class="btn btn-sm btn-secondary" v-on:click="addRoleAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
            </li>
            <li class="nav-item">
                <h5>Roles</h5>
            </li>
        </ul>
        <p><i>By adding roles the user will be granted access to the product according to the role</i></p>
    </div>
    <br />
    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
            </tr>
        </thead>
        <tbody v-for="item in model.roleAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
            </tr>
        </tbody>
    </table>

    <hr />
    <br />

    <div style="margin-left:10px">
        <ul class="nav">
            <li class="nav-item">
                <button class="btn btn-sm btn-secondary" v-on:click="addSystemAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
            </li>
            <li class="nav-item">
                <h5>Systems</h5>
            </li>
        </ul>
        <p><i>By adding system-permissions the user will be granted access to all applications in a system in the product</i></p>
    </div>
    <br />
    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
                <th style="width:10%">Read</th>
                <th style="width:10%">Modify</th>
                <th style="width:10%">Delete</th>
            </tr>
        </thead>
        <tbody v-for="item in model.systemAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
                <td><span v-if="item.read">Yes</span><span v-if="!item.read">No</span></td>
                <td><span v-if="item.modify">Yes</span><span v-if="!item.modify">No</span></td>
                <td><span v-if="item.delete">Yes</span><span v-if="!item.delete">No</span></td>
            </tr>
        </tbody>
    </table>

    <hr />
    <br />

    <div style="margin-left:10px">
        <ul class="nav">
            <li class="nav-item">
                <button class="btn btn-sm btn-secondary" v-on:click="addApplicationAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
            </li>
            <li class="nav-item">
                <h5>Applications</h5>
            </li>
        </ul>
        <p><i>By adding application-permissions the user will be granted access to applications in the product</i></p>
    </div>
    <br />
    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
                <th style="width:10%">Read</th>
                <th style="width:10%">Modify</th>
                <th style="width:10%">Delete</th>
            </tr>
        </thead>
        <tbody v-for="item in model.applicationAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
                <td><span v-if="item.read">Yes</span><span v-if="!item.read">No</span></td>
                <td><span v-if="item.modify">Yes</span><span v-if="!item.modify">No</span></td>
                <td><span v-if="item.delete">Yes</span><span v-if="!item.delete">No</span></td>
            </tr>
        </tbody>
    </table>

    <hr />
    <br />

    <div style="margin-left:10px">
        <ul class="nav">
            <li class="nav-item">
                <button class="btn btn-sm btn-secondary" v-on:click="addViewAuth()" style="margin-right:10px"><span class="fa fa-plus"></span></button>
            </li>
            <li class="nav-item">
                <h5>Views</h5>
            </li>
        </ul>
        <p><i>By adding application-view permissions the user will be granted access to views in the product</i></p>
    </div>

    <br />

    <table class="table table">
        <thead>
            <tr>
                <th style="width:5%"></th>
                <th style="width:30%">Name</th>
                <th style="width:10%">Read</th>
                <th style="width:10%">Modify</th>
                <th style="width:10%">Delete</th>
            </tr>
        </thead>
        <tbody v-for="item in model.viewAuthorizations">
            <tr>
                <td><div class="btn btn-sm btn-danger" v-on:click="removeAuthorizationItem(item)" title="Remove"><i class="fa fa-trash"></i></div></td>
                <td>{{item.authorizationItemName}}</td>
                <td><span v-if="item.read">Yes</span><span v-if="!item.read">No</span></td>
                <td><span v-if="item.modify">Yes</span><span v-if="!item.modify">No</span></td>
                <td><span v-if="item.delete">Yes</span><span v-if="!item.delete">No</span></td>
            </tr>
        </tbody>
    </table>

    <hr />

    <div class="modal" id="addAuthorizationModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Authorize {{authorization.authorizationItemTypeName}}</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group" v-if="authorization.authorizationItemType=='ROLE'">
                        <label class="control-label">Select Role<span style="color: red"> *</span></label>
                        <select v-model="authorization.authorizationItemId" class="form-control form-control-sm">
                            <option v-for="item in authitem.roleItems" v-bind:value="item.id">{{item.name}}</option>
                        </select>
                    </div>
                    <div class="form-group" v-if="authorization.authorizationItemType=='SYSTEM'">
                        <label class="control-label">Select System<span style="color: red"> *</span></label>
                        <select v-model="authorization.authorizationItemId" class="form-control form-control-sm">
                            <option v-for="item in authitem.systemItems" v-bind:value="item.id">{{item.name}}</option>
                        </select>
                        <input type="checkbox" v-model="authorization.read" /> Read
                        <input type="checkbox" v-model="authorization.modify" /> Modify
                        <input type="checkbox" v-model="authorization.delete" /> Delete
                    </div>
                    <div class="form-group" v-if="authorization.authorizationItemType=='APPLICATION'">
                        <label class="control-label">Select Application<span style="color: red"> *</span></label>
                        <select v-model="authorization.authorizationItemId" class="form-control form-control-sm">
                            <option v-for="item in authitem.applicationItems" v-bind:value="item.id">{{item.name}}</option>
                        </select>
                        <input type="checkbox" v-model="authorization.read" /> Read
                        <input type="checkbox" v-model="authorization.modify" /> Modify
                        <input type="checkbox" v-model="authorization.delete" /> Delete
                    </div>
                    <div class="form-group" v-if="authorization.authorizationItemType=='VIEW'">
                        <label class="control-label">Select View<span style="color: red"> *</span></label>
                        <select v-model="authorization.authorizationItemId" class="form-control form-control-sm">
                            <option v-for="item in authitem.viewItems" v-bind:value="item.id">{{item.name}}</option>
                        </select>
                        <input type="checkbox" v-model="authorization.read" /> Read
                        <input type="checkbox" v-model="authorization.modify" /> Modify
                        <input type="checkbox" v-model="authorization.delete" /> Delete
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="addAuthorizationModal_okBtn" type="button" class="btn btn-sm btn-primary" data-dismiss="modal" :disabled="authorization.authorizationItemId==0">Ok</button>
                    <button type="button" class="btn btn-sm btn-secondary" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>


</div>

@section Scripts
    {

    <script>

        var app = new Vue({
            el: '#app',
            data:
            {
                model: {},
                authorization: { authorizationItemType: "", authorizationItemId: 0, authorizationItemTypeName: ""},
                users: [],
                authitem: {},
                idgen: -1
            },
            methods: {

                updateEntity: function ()
                {

                },
                removeAuthorizationItem: function (item)
                {
                    var context = this;
                    var yesfunc = function ()
                    {

                        var baseurl = '@Url.Content("~/Identity/IAM/")';
                        var endpointurl = baseurl + "UserProduct/@Model.UserId/@Model.OrganizationId/@Model.ProductId?handler=RemoveAuthorization";
                        var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(item),
                            headers: {
                                RequestVerificationToken: antiforgerytoken
                            },
                            success: function (response) {
                                context.model = response;
                            },
                            error: function (response) {
                                //raiseErrorModal(response.responseJSON);
                            }
                        });
                     }

                    raiseYesNoModal("Remove Authorization ?", "Selected authorization item will be removed from the user, continue ?", yesfunc);
                },
                addRoleAuth: function ()
                {

                    var context = this;

                    context.authorization = { authorizationItemType: "ROLE", authorizationItemId: 0, authorizationItemTypeName: "Role", userId:"", organizationId:0, productId:"" }

                    var okfunc = function ()
                    {
                        context.authorization.userId = "@Model.UserId";
                        context.authorization.organizationId = @Model.OrganizationId;
                        context.authorization.productId = "@Model.ProductId";

                        var baseurl = '@Url.Content("~/Identity/IAM/")';
                        var endpointurl = baseurl + "UserProduct/@Model.UserId/@Model.OrganizationId/@Model.ProductId?handler=AddRoleAuthorization";
                        var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(context.authorization),
                            headers: {
                                RequestVerificationToken: antiforgerytoken
                            },
                            success: function (response)
                            {
                                context.model = response;
                            },
                            error: function (response)
                            {
                                //raiseErrorModal(response.responseJSON);
                            }
                        });
                    }

                    $("#addAuthorizationModal_okBtn").off().on('click', okfunc);
                    $("#addAuthorizationModal").modal();
                },
                addSystemAuth: function ()
                {
                    var context = this;
                    context.authorization = { authorizationItemType: "SYSTEM", authorizationItemId: 0, authorizationItemTypeName: "System", userId:"", organizationId:0, productId:"", read:false, modify:false, delete:false }

                    var okfunc = function ()
                    {
                        context.authorization.userId = "@Model.UserId";
                        context.authorization.organizationId = @Model.OrganizationId;
                        context.authorization.productId = "@Model.ProductId";

                        var baseurl = '@Url.Content("~/Identity/IAM/")';
                        var endpointurl = baseurl + "UserProduct/@Model.UserId/@Model.OrganizationId/@Model.ProductId?handler=AddSystemAuthorization";
                        var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(context.authorization),
                            headers: {
                                RequestVerificationToken: antiforgerytoken
                            },
                            success: function (response)
                            {
                                context.model = response;
                            },
                            error: function (response)
                            {
                                //raiseErrorModal(response.responseJSON);
                            }
                        });
                    }

                    $("#addAuthorizationModal_okBtn").off().on('click', okfunc);
                    $("#addAuthorizationModal").modal();
                },
                addApplicationAuth: function () {
                     var context = this;
                    context.authorization = { authorizationItemType: "APPLICATION", authorizationItemId: 0, authorizationItemTypeName: "Application", userId:"", organizationId:0, productId:"", read:false, modify:false, delete:false }

                    var okfunc = function ()
                    {
                        context.authorization.userId = "@Model.UserId";
                        context.authorization.organizationId = @Model.OrganizationId;
                        context.authorization.productId = "@Model.ProductId";

                        var baseurl = '@Url.Content("~/Identity/IAM/")';
                        var endpointurl = baseurl + "UserProduct/@Model.UserId/@Model.OrganizationId/@Model.ProductId?handler=AddApplicationAuthorization";
                        var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(context.authorization),
                            headers: {
                                RequestVerificationToken: antiforgerytoken
                            },
                            success: function (response)
                            {
                                context.model = response;
                            },
                            error: function (response)
                            {
                                //raiseErrorModal(response.responseJSON);
                            }
                        });
                    }

                    $("#addAuthorizationModal_okBtn").off().on('click', okfunc);
                    $("#addAuthorizationModal").modal();

                },
                addViewAuth: function ()
                {
                     var context = this;
                    context.authorization = { authorizationItemType: "VIEW", authorizationItemId: 0, authorizationItemTypeName: "View", userId:"", organizationId:0, productId:"", read:false, modify:false, delete:false }

                    var okfunc = function ()
                    {
                        context.authorization.userId = "@Model.UserId";
                        context.authorization.organizationId = @Model.OrganizationId;
                        context.authorization.productId = "@Model.ProductId";

                        var baseurl = '@Url.Content("~/Identity/IAM/")';
                        var endpointurl = baseurl + "UserProduct/@Model.UserId/@Model.OrganizationId/@Model.ProductId?handler=AddViewAuthorization";
                        var antiforgerytoken = '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken';

                        $.ajax({
                            url: endpointurl,
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(context.authorization),
                            headers: {
                                RequestVerificationToken: antiforgerytoken
                            },
                            success: function (response)
                            {
                                context.model = response;
                            },
                            error: function (response)
                            {
                                //raiseErrorModal(response.responseJSON);
                            }
                        });
                    }

                    $("#addAuthorizationModal_okBtn").off().on('click', okfunc);
                    $("#addAuthorizationModal").modal();

                }

            },
            computed:
            {
                example: function ()
                {

                }

            },
            mounted: function ()
            {
                var context = this;
                var baseurl = '@Url.Content("~/Identity/IAM/")';
                var endpointurl = baseurl + "UserProduct/@Model.UserId/@Model.OrganizationId/@Model.ProductId?handler=Load";
                $.get(endpointurl, function (response)
                {
                     context.model = response;
                     var endpointurl = baseurl + "UserProduct/@Model.UserId/@Model.OrganizationId/@Model.ProductId?handler=LoadAuthItems";
                     $.get(endpointurl, function (response)
                     {
                         context.authitem = response;

                     });
                });
            }
        });
    </script>

}

