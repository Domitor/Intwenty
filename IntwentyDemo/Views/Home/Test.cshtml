

<div id="app">

    {{appobject}}

    <br />
    <br />

    <div class="form-group">
        <label class="control-label">Test Selectize</label>
        <input type="text" id="multiselect" class="form-control form-control-lg" 
                data-metatype="@Intwenty.Model.UserInterfaceStructureModelItem.MetaTypeSearchBox"
                data-dbfield="Code"
                data-dbfield2="Value"
                data-usesearch="TRUE"
                data-multiselect="TRUE"
                data-allowcreate="TRUE"
                data-domain="APPDOMAIN.VENDOR"
               />
    </div>

    <div class="form-group">
        <label class="control-label">Test Combobox</label>
        <select id="combobox" class="form-control"
                data-metatype="@Intwenty.Model.UserInterfaceStructureModelItem.MetaTypeComboBox"
                data-dbfield="CbValue"
                data-dbfield2="CbText"
                data-usesearch="FALSE"
                data-multiselect="FALSE"
                data-allowcreate="FALSE"
                data-domain="APPDOMAIN.VENDOR"
                ></select>
    </div>

</div>





@section Scripts
{
    <script>

        Vue.prototype.initSelectize = function (appobject,codecolname,valcolname,uiid,domainname,allowcreate,usesearch,usemultiselect)
        {
            if (!uiid)
                return;

            var element = $(uiid);

            if (!element)
                return;

            var plugs = null;
            var iscombobox = false;
            if (element[0].nodeName == 'SELECT') {
                iscombobox = true;
                usesearch = false;
                allowcreate = false;
                maxitems = 1;
            }
            else
            {
                plugs = ['remove_button'];
            }



            var maxitems = 1;
            if (usemultiselect)
                maxitems = 10;

            var t = $(uiid).selectize({
                plugins: plugs
                , delimiter: ','
                , maxItems: maxitems
                , valueField: 'code'
                , labelField: 'value'
                , searchField: 'value'
                , options: []
                , create: allowcreate
                , preload :true
                , load: function (query, callback)
                {
                    if (!query || !usesearch || iscombobox)
                        query = 'ALL';
                    if (usesearch && !iscombobox && query == 'ALL')
                        query = 'PRELOAD';

                    if (!domainname) return callback();

                    $.get('/Application/API/GetValueDomain/' + domainname + '/' + query, function (response) {
                        callback(response);
                        if (appobject[codecolname]) {
                            var persisteditems = appobject[codecolname].split(",");
                            for (var i = 0; i < persisteditems.length; i++) {
                                //t[0].selectize.addOption({ Code: persisteditems[i], Value: persisteditems[i] });
                                //ADD ITEM BUT DONT TRIGGER CHANGE
                                t[0].selectize.addItem(persisteditems[i],true);

                            }
                        }
                    });
                }
               
            });

           

            t.on('change',
                function ()
                {
                    var selected_objects = $.map(t[0].selectize.items, function (value) {
                        return t[0].selectize.options[value];
                    });

                    var codestr = "";
                    var valstr = "";
                    var delim = "";
                    for (var i = 0; i < selected_objects.length; i++)
                    {
                        var code = selected_objects[i].code;
                        var val = selected_objects[i].value;
                        codestr += delim + code;
                        valstr += delim + val;
                        delim = ",";

                    }
                    if (appobject && codecolname)
                        appobject[codecolname] = codestr;

                    if (appobject && valcolname)
                         appobject[valcolname] = valstr;
                });
        };

          var app = new Vue({
            el: '#app',
              data: {

                  appobject: { Code: "2,Goof,1", Value: "", CbValue: "3", CbText: ""}

              },
            methods:
            {
                initNoneVueControls: function (bindingcontext)
                {
                    var context = this;

                    $("input[data-metatype],select[data-metatype]").each(function ()
                    {
                        var metatype = $(this).data('metatype');
                        if (metatype === "COMBOBOX" || metatype === "SEARCHBOX" )
                        {
                            var uid = "#" + this.id;
                            var dbfield = $(this).data('dbfield');
                            var dbfield2 = $(this).data('dbfield2');
                            var domain = $(this).data('domain');
                            var usesearch = $(this).data('usesearch');
                            var multiselect = $(this).data('multiselect');
                            var allowcreate = $(this).data('allowcreate');

                            var b_allowcreate = (allowcreate == "TRUE");
                            var b_usesearch = (usesearch == "TRUE");
                            var b_multiselect = (multiselect == "TRUE");

                            context.initSelectize(bindingcontext, dbfield, dbfield2, uid, domain, b_allowcreate, b_usesearch, b_multiselect);
                        }
                    });


                }


            },
            computed: {

            },
            mounted: function ()
            {
                this.initNoneVueControls(this.appobject);
            }
        });


    </script>

}




